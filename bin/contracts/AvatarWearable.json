{
    "contractName": "AvatarWearable",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "symbol",
                    "type": "string"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "ERC725Y_DataKeysValuesEmptyArray",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ERC725Y_DataKeysValuesLengthMismatch",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ERC725Y_MsgValueDisallowed",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes",
                    "name": "storedData",
                    "type": "bytes"
                }
            ],
            "name": "InvalidExtensionAddress",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "InvalidFunctionSelector",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "LSP4TokenNameNotEditable",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "LSP4TokenSymbolNotEditable",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "LSP4TokenTypeNotEditable",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "callIndex",
                    "type": "uint256"
                }
            ],
            "name": "LSP8BatchCallFailed",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "LSP8CannotSendToAddressZero",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "LSP8CannotSendToSelf",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "LSP8CannotUseAddressZeroAsOperator",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "LSP8InvalidTransferBatch",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                }
            ],
            "name": "LSP8NonExistentTokenId",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                }
            ],
            "name": "LSP8NonExistingOperator",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "caller",
                    "type": "address"
                }
            ],
            "name": "LSP8NotTokenOperator",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "tokenOwner",
                    "type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "caller",
                    "type": "address"
                }
            ],
            "name": "LSP8NotTokenOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "tokenReceiver",
                    "type": "address"
                }
            ],
            "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "tokenReceiver",
                    "type": "address"
                }
            ],
            "name": "LSP8NotifyTokenReceiverIsEOA",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                }
            ],
            "name": "LSP8OperatorAlreadyAuthorized",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "LSP8TokenContractCannotHoldValue",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                }
            ],
            "name": "LSP8TokenIdAlreadyMinted",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "LSP8TokenIdFormatNotEditable",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "LSP8TokenIdsDataEmptyArray",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "LSP8TokenIdsDataLengthMismatch",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "LSP8TokenOwnerCannotBeOperator",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "functionSelector",
                    "type": "bytes4"
                }
            ],
            "name": "NoExtensionFoundForFunctionSelector",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "callerAddress",
                    "type": "address"
                }
            ],
            "name": "OwnableCallerNotTheOwner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "OwnableCannotSetZeroAddressAsOwner",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "dataKey",
                    "type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "dataValue",
                    "type": "bytes"
                }
            ],
            "name": "DataChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "tokenOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "operatorNotificationData",
                    "type": "bytes"
                }
            ],
            "name": "OperatorAuthorizationChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "tokenOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "notified",
                    "type": "bool"
                },
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "operatorNotificationData",
                    "type": "bytes"
                }
            ],
            "name": "OperatorRevoked",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "dataKey",
                    "type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "dataValue",
                    "type": "bytes"
                }
            ],
            "name": "TokenIdDataChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "force",
                    "type": "bool"
                },
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                },
                {
                    "internalType": "bytes",
                    "name": "operatorNotificationData",
                    "type": "bytes"
                }
            ],
            "name": "authorizeOperator",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "avatarAccessContract",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "tokenOwner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes[]",
                    "name": "data",
                    "type": "bytes[]"
                }
            ],
            "name": "batchCalls",
            "outputs": [
                {
                    "internalType": "bytes[]",
                    "name": "results",
                    "type": "bytes[]"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "tokenOwner",
                    "type": "address"
                }
            ],
            "name": "equipWearable",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "dataKey",
                    "type": "bytes32"
                }
            ],
            "name": "getData",
            "outputs": [
                {
                    "internalType": "bytes",
                    "name": "dataValue",
                    "type": "bytes"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32[]",
                    "name": "dataKeys",
                    "type": "bytes32[]"
                }
            ],
            "name": "getDataBatch",
            "outputs": [
                {
                    "internalType": "bytes[]",
                    "name": "dataValues",
                    "type": "bytes[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32[]",
                    "name": "tokenIds",
                    "type": "bytes32[]"
                },
                {
                    "internalType": "bytes32[]",
                    "name": "dataKeys",
                    "type": "bytes32[]"
                }
            ],
            "name": "getDataBatchForTokenIds",
            "outputs": [
                {
                    "internalType": "bytes[]",
                    "name": "dataValues",
                    "type": "bytes[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                },
                {
                    "internalType": "bytes32",
                    "name": "dataKey",
                    "type": "bytes32"
                }
            ],
            "name": "getDataForTokenId",
            "outputs": [
                {
                    "internalType": "bytes",
                    "name": "dataValue",
                    "type": "bytes"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                }
            ],
            "name": "getOperatorsOf",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                }
            ],
            "name": "isOperatorFor",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                },
                {
                    "internalType": "bool",
                    "name": "notify",
                    "type": "bool"
                },
                {
                    "internalType": "bytes",
                    "name": "operatorNotificationData",
                    "type": "bytes"
                }
            ],
            "name": "revokeOperator",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_avatarAccessContract",
                    "type": "address"
                }
            ],
            "name": "setAvatarAccessContract",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "dataKey",
                    "type": "bytes32"
                },
                {
                    "internalType": "bytes",
                    "name": "dataValue",
                    "type": "bytes"
                }
            ],
            "name": "setData",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32[]",
                    "name": "dataKeys",
                    "type": "bytes32[]"
                },
                {
                    "internalType": "bytes[]",
                    "name": "dataValues",
                    "type": "bytes[]"
                }
            ],
            "name": "setDataBatch",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32[]",
                    "name": "tokenIds",
                    "type": "bytes32[]"
                },
                {
                    "internalType": "bytes32[]",
                    "name": "dataKeys",
                    "type": "bytes32[]"
                },
                {
                    "internalType": "bytes[]",
                    "name": "dataValues",
                    "type": "bytes[]"
                }
            ],
            "name": "setDataBatchForTokenIds",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                },
                {
                    "internalType": "bytes32",
                    "name": "dataKey",
                    "type": "bytes32"
                },
                {
                    "internalType": "bytes",
                    "name": "dataValue",
                    "type": "bytes"
                }
            ],
            "name": "setDataForTokenId",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "tokenOwner",
                    "type": "address"
                }
            ],
            "name": "tokenIdsOf",
            "outputs": [
                {
                    "internalType": "bytes32[]",
                    "name": "",
                    "type": "bytes32[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                }
            ],
            "name": "tokenOwnerOf",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "tokenId",
                    "type": "bytes32"
                },
                {
                    "internalType": "bool",
                    "name": "force",
                    "type": "bool"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "transfer",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address[]",
                    "name": "from",
                    "type": "address[]"
                },
                {
                    "internalType": "address[]",
                    "name": "to",
                    "type": "address[]"
                },
                {
                    "internalType": "bytes32[]",
                    "name": "tokenId",
                    "type": "bytes32[]"
                },
                {
                    "internalType": "bool[]",
                    "name": "force",
                    "type": "bool[]"
                },
                {
                    "internalType": "bytes[]",
                    "name": "data",
                    "type": "bytes[]"
                }
            ],
            "name": "transferBatch",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"storedData\",\"type\":\"bytes\"}],\"name\":\"InvalidExtensionAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"InvalidFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callIndex\",\"type\":\"uint256\"}],\"name\":\"LSP8BatchCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenContractCannotHoldValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8TokenIdAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdFormatNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenOwnerCannotBeOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"name\":\"NoExtensionFoundForFunctionSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callerAddress\",\"type\":\"address\"}],\"name\":\"OwnableCallerNotTheOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"avatarAccessContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"equipWearable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_avatarAccessContract\",\"type\":\"address\"}],\"name\":\"setAvatarAccessContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"InvalidExtensionAddress(bytes)\":[{\"details\":\"reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\"}],\"InvalidFunctionSelector(bytes)\":[{\"details\":\"reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP8BatchCallFailed(uint256)\":[{\"details\":\"Reverts when a batch call failed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"Reverts when trying to send token to the zero address.\"}],\"LSP8CannotSendToSelf()\":[{\"details\":\"Reverts when specifying the same address for `from` and `to` in a token transfer.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"Reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"Reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"Reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"Reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"Reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"Reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"Reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"Reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"Reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"details\":\"Error occurs when sending native tokens to the LSP8 contract without sending any data. E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\"}],\"LSP8TokenIdAlreadyMinted(bytes32)\":[{\"details\":\"Reverts when `tokenId` has already been minted.\"}],\"LSP8TokenIdFormatNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed. The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract. It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed.\"}],\"LSP8TokenIdsDataEmptyArray()\":[{\"details\":\"Reverts when empty arrays is passed to the function\"}],\"LSP8TokenIdsDataLengthMismatch()\":[{\"details\":\"Reverts when the length of the token IDs data arrays is not equal\"}],\"LSP8TokenOwnerCannotBeOperator()\":[{\"details\":\"Reverts when trying to authorize or revoke the token's owner as an operator.\"}],\"NoExtensionFoundForFunctionSelector(bytes4)\":[{\"details\":\"reverts when there is no extension for the function selector being called with\"}],\"OwnableCallerNotTheOwner(address)\":[{\"details\":\"Reverts when only the owner is allowed to call the function.\",\"params\":{\"callerAddress\":\"The address that tried to make the call.\"}}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract, initializing it or transferring ownership of the contract.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}},\"OperatorAuthorizationChanged(address,address,bytes32,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\",\"params\":{\"operator\":\"The address authorized as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` address has access on behalf of `tokenOwner`.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"OperatorRevoked(address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from the operator array ({getOperatorsOf}).\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"TokenIdDataChanged(bytes32,bytes32,bytes)\":{\"details\":\"Emitted when setting data for `tokenId`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The tokenId which data is set for.\"}},\"Transfer(address,address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenId` token is transferred from the `from` to the `to` address.\",\"params\":{\"data\":\"Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The previous owner of the `tokenId`\",\"operator\":\"The address of operator that sent the `tokenId`\",\"to\":\"The new owner of `tokenId`\",\"tokenId\":\"The tokenId that was transferred\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"custom:info\":\"It's not possible to send value along the functions call due to the use of `delegatecall`.\",\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValue\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32,bool,bytes)\":{\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenId\":\"tokenOwner The address to query owned tokens\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any addres. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"LSP8BatchCallFailed(uint256)\":[{\"notice\":\"Batch call failed.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"notice\":\"LSP8 contract cannot receive native tokens.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/GabCh/Documents/projects/portal-contracts/contracts/AvatarWearable.sol\":\"AvatarWearable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"c:/Users/GabCh/Documents/projects/portal-contracts/contracts/AvatarAccess.sol\":{\"keccak256\":\"0x40896e785e49d4a83b6a06bf96b1f74a4debbe91c798e423cc26dc0213e89682\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a0875d96df87bef3af85a42839e7ab0bef84810a1bb66637b219c353175d18d\",\"dweb:/ipfs/QmdEj9EARcB7HU7YFPd15HfcNyK8DgYRkt3m5c1p7wKjwD\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/contracts/AvatarWearable.sol\":{\"keccak256\":\"0xba207fdf9a39f6987060e11ecf2fe8f5d04a828fffb2edcc36931073286585bd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f73c398d0b7285c4ebe606ab2a7aa6c7950047b0510fbaab85c1a7f61be49059\",\"dweb:/ipfs/Qma8ysEFVBiKi4CgSoV1mPRofME6V8WugnQwdiGbYTxCj3\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0x4cb23ef9c2c93d881737c47cd0eebd63dcb39828484fda1fd3a5ce9971df3ef7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ff707e4552e8e442ff88d8b961583912664eaee373b49f03b1e6c4cd28213938\",\"dweb:/ipfs/QmVELUkQr3TikdEZoG9cxhwUCknuvSYVGKwpeDF76XiZpb\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0xe4ab8aa2159e8a58e63c8ebc419b135b787977709a60845c3d38271cc76020f5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cbc1688af8171d9df29a940daaf8a873be12d7a2d70e71717666fc683c12d91c\",\"dweb:/ipfs/QmdYvF5pwPFhqZJAidN9wMoyQhzgMHn9tiPk92ND3doHck\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xa9c83adb0239b86c0ff6251a03bc70115470c7ae10eb99276d6dd33636054b36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95a0109837bdffe887b6568b7f9bbde2b20cfd0c4db638805cf61ada5743b24d\",\"dweb:/ipfs/QmYH2erMtqiEYjRznWnc6NbBbwxvy6ArE45jtXYEyWi3Bc\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0xaafdb4370450b8874224b3c0b2b712149da97a50c9a47f56e4b654aa57eb87c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4e40b0f64613e5bbd62575facc72d2bcad249595e9397b5bff063dc5a81e757\",\"dweb:/ipfs/QmXx5yDvPxWzKXFYK7HDAbSNDBKRskYLoDwgrThmAimzDL\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xefc84a22f11acd08cf2a3484d65672f8594408bfcb35b77364144f618a74061f\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://733274e057ba6abdade57dec61b8c5a57b207455172aa0b2f94aba54eb4d96d5\",\"dweb:/ipfs/QmNxivSuJY2En72WxFRZeWbGrEzZbAHhaVExKk8ZXNsUih\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol\":{\"keccak256\":\"0x9613e18760003f6c8f8213295367a1c0703fcc4fdf1315c9f5f3ea62245cdf59\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://58fdcd686e51e6bad60094c91e922cb0cb4c3bd1bb859ac24822ed5003bf162e\",\"dweb:/ipfs/QmatJQNmakmPyjkudSMERgURK98GyWokoaaJC9sX2Vgr3s\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol\":{\"keccak256\":\"0xae0f5260b3a2eb6fd8b638d1af9c24ce09dcc160491d5e5f274fb19ff89494ad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1bb86e9f8a8fb9c6292e86ddf57938c712ccfaaf241bad79da08fea40b27fc1c\",\"dweb:/ipfs/Qmb6AfYGCc3fJGxmfuyRJw5bLk546WkfB2gApdRpmX1t58\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol\":{\"keccak256\":\"0x617163c3d8fb5768ad0b6457d21a16fcb2a71664dd48a6c0d75d927ff0934413\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ccfbf38351e0ef870a639f0c638ec2e3e12ba0226a9abc9be44321ebe31bc92a\",\"dweb:/ipfs/QmRxN9qLTEDNPdvF4Fiepx4g1xs9ECbrTerW4zUQMZ9XUd\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0x830e422f3af8aab73a2a5e2c3c181aefb671dfd1506d0dd396b7d917af0b14ab\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ba740a1f24141041ee7abc2ac2692d7c6bdce0f8d6284ecdbd95bea796172f41\",\"dweb:/ipfs/Qma4ZJnBnqscGMnb2qkYhVgvsQEkhngkDZnFYLASFAwBzY\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol\":{\"keccak256\":\"0x1669cc0a3109cf92e21cc2a886d42ac498328b6e1190588a878e345fd7cf8dd3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://63610c0c25e57a8216b1cc333b0b545c897025a40077919b551a1bab944d713e\",\"dweb:/ipfs/QmeJ3YmZu3joc8SJDYsTmbP1DT1cGKC4tvtiNjbHtc5ToF\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x38bd4c21aab4a59c39de17f66daf1830a088bfa3dce4973448523af278252bbd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7790fb1b8b4fb11338e6b2d25ca11822c156064f01d97babb01f347b83f834dd\",\"dweb:/ipfs/QmbsyMdyboLTEPkXJPuBUE4ZiojfZnMZM8hQwjRXXLnAcf\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\":{\"keccak256\":\"0x2372e7ec422a13ce3e7968e5fbb081b67816b5de974bd76ec61cfed787abbe1b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6d147e2f290ed60e36e9187dc7cce7d7ee1a62eee1c25c761e6090d88e3fa383\",\"dweb:/ipfs/Qmf9HEYCCjx2xBopvq7WhhtjvL9AEihvNcZ512751Wg6LN\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol\":{\"keccak256\":\"0x0dfadefc7641592a03a9ab346c3b994e467add0905849d921a2587f8044d7539\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://eaab1079fb0779921eb8abff8c811adc838c3a0bf82e6d1536dc2211cf8e197c\",\"dweb:/ipfs/QmaPYBRREJmru8iTVTw2mnEePyV8heUFGE7sVx41r5EzNb\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0xf94f766f91ddb58396759def18cad304b0ec853f7ee3cfb3ba002a18b89076de\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://062c53499012e9d5bf94853bf085f3cba0ec25589c4f82bf1b6c462a886fb4ae\",\"dweb:/ipfs/QmNQRFc4bHvSu5GW9W1RhGve98edqdKdohg1wLkfgBV9Sr\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0xf31f875be7cc9c207c0e5f3a8a1d879e19c853f427003c7360af57cab12c3bbd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d6965ba4ff158f208f360b7d677f48396da8c11f16f980159f1d053fef5e5114\",\"dweb:/ipfs/QmWm91NyPTrk3Jeupiaw8uE7UVcURbxc7Mj2ZBpGgDmHn1\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xac3d50e321a48a40b4496970ce725900f13aeb2255b7c1203f5adbe98c4a911a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d7b235b578347dce2d831a76f122e820a7db7e73fd2e47f13bafdcd61c5b066\",\"dweb:/ipfs/QmVAELwambfJa55HfiCoz1kFFh7iYwRYeW5x8si6AFM4iX\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}",
    "bytecode": "60808060405234610870576132c6803803809161001c8285610874565b83398101906040818303126108705780516001600160401b0381116108705782610047918301610897565b60208201519092906001600160401b038111610870576100679201610897565b903315610861575f546001600160a01b03811633819003610825575b505060409081516100948382610874565b60048152632936598960e21b60208201525f5160206132465f395f51905f525f526001602052825f20815160018060401b038111610511578154600181811c9116801561081b575b60208210146104f357601f81116107d6575b506020601f821160011461075557925f5160206132a65f395f51905f529282610145935f5160206132465f395f51905f52965f9161074a575b508160011b915f199060031b1c19161790555b8551918291826108ec565b0390a25f5160206132065f395f51905f525f908152600160205282902081516001600160401b038111610511578154600181811c91168015610740575b60208210146104f357601f81116106fb575b506020601f821160011461069357925f5160206132a65f395f51905f5292826101eb935f5160206132065f395f51905f52965f91610422575b508160011b915f199060031b1c19161790555b8451918291826108ec565b0390a25f5160206132865f395f51905f525f9081526001602052819020825192906001600160401b038411610511578054600181811c91168015610689575b60208210146104f357601f8111610644575b50602093601f81116001146105dc579161029391835f5160206132a65f395f51905f52945f5160206132865f395f51905f5296975f9161042257508160011b915f199060031b1c19161790558451918291826108ec565b0390a280519060016020830152602082526102ae8183610874565b5f5160206132265f395f51905f525f9081526001602052819020825192906001600160401b038411610511578054600181811c911680156105d2575b60208210146104f357601f811161058d575b50602093601f8111600114610525579161035391835f5160206132a65f395f51905f52945f5160206132265f395f51905f5296975f9161042257508160011b915f199060031b1c19161790558451918291826108ec565b0390a28051905f60208301526020825261036d8183610874565b5f5160206132665f395f51905f525f9081526001602052819020825192906001600160401b038411610511578054600181811c91168015610507575b60208210146104f357601f81116104ae575b50602093601f811160011461042d579161041291835f5160206132a65f395f51905f52945f5160206132665f395f51905f5296975f9161042257508160011b915f199060031b1c19161790558451918291826108ec565b0390a2516128ef90816109178239f35b90508301515f6101cd565b601f198116825f52855f20905f5b81811061049657508261041294925f5160206132665f395f51905f5297985f5160206132a65f395f51905f5297956001941061047e575b5050811b0190556101e0565b8501515f1960f88460031b161c191690555f80610472565b8588015183556020978801976001909301920161043b565b815f5260205f20601f860160051c810191602087106104e9575b601f0160051c01905b8181106104de57506103bb565b5f81556001016104d1565b90915081906104c8565b634e487b7160e01b5f52602260045260245ffd5b90607f16906103a9565b634e487b7160e01b5f52604160045260245ffd5b601f198116825f52855f20905f5b81811061057557508261035394925f5160206132265f395f51905f5297985f5160206132a65f395f51905f5297956001941061047e575050811b0190556101e0565b85880151835560209788019760019093019201610533565b815f5260205f20601f860160051c810191602087106105c8575b601f0160051c01905b8181106105bd57506102fc565b5f81556001016105b0565b90915081906105a7565b90607f16906102ea565b601f198116825f52855f20905f5b81811061062c57508261029394925f5160206132865f395f51905f5297985f5160206132a65f395f51905f5297956001941061047e575050811b0190556101e0565b858801518355602097880197600190930192016105ea565b815f5260205f20601f860160051c8101916020871061067f575b601f0160051c01905b818110610674575061023c565b5f8155600101610667565b909150819061065e565b90607f169061022a565b601f19821690835f52805f20915f5b8181106106e35750835f5160206132065f395f51905f5296935f5160206132a65f395f51905f5296936101eb966001941061047e575050811b0190556101e0565b9192602060018192868a0151815501940192016106a2565b825f5260205f20601f830160051c81019160208410610736575b601f0160051c01905b81811061072b5750610194565b5f815560010161071e565b9091508190610715565b90607f1690610182565b90508301515f610127565b601f19821690835f52805f20915f5b8181106107be5750835f5160206132465f395f51905f5296935f5160206132a65f395f51905f52969361014596600194106107a6575b5050811b01905561013a565b8501515f1960f88460031b161c191690555f8061079a565b9192602060018192868a015181550194019201610764565b825f5260205f20601f830160051c81019160208410610811575b601f0160051c01905b81811061080657506100ee565b5f81556001016107f9565b90915081906107f0565b90607f16906100dc565b33907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36001600160a01b03191633175f90815580610083565b6306b620db60e21b5f5260045ffd5b5f80fd5b601f909101601f19168101906001600160401b0382119082101761051157604052565b81601f82011215610870578051906001600160401b03821161051157604051926108cb601f8401601f191660200185610874565b8284526020838301011161087057815f9260208093018386015e8301015290565b602060409281835280519182918282860152018484015e5f828201840152601f01601f191601019056fe6080604052600436101561002a575b36156100255761001d3661195a565b602081519101f35b611920565b5f3560e01c806301ffc9a7146101e957806316e023b3146101e457806318160ddd146101df5780631d26fce6146101da578063217b2270146101d55780632a3654a4146101d0578063354bedd9146101cb57806335615ec8146101c65780633ccfd60b146101c157806349a6078d146101bc578063511b6952146101b757806354f6127f146101b25780636963d438146101ad5780636a627842146101a857806370a08231146101a3578063715018a61461019e5780637e87632c146101995780637f23690c1461019457806386a10ddd1461018f5780638da5cb5b1461018a5780639790242114610185578063a3b261f214610180578063b6fea40f1461017b578063be9f0e6f14610176578063d6c1407c14610171578063db8c96631461016c578063dedff9c6146101675763f2fde38b0361000e5761132e565b6112a8565b6111dc565b611195565b61109a565b611057565b610fd9565b610ee7565b610ec0565b610d73565b610d20565b610c68565b610ab6565b610a7e565b610917565b6108ab565b61088c565b610832565b61074e565b610694565b61066c565b610580565b610546565b6104ea565b610438565b61030e565b6102d8565b3461029c57602036600319011261029c576004356001600160e01b0319811680820361029c5761024091631d138b8360e11b8214918215610254575b508115610244575b5060405190151581529081906020820190565b0390f35b61024e91506119a5565b5f61022d565b90915063a918fa6b60e01b8114908115610271575b50905f610225565b6318a6a9a560e21b81149150811561028b575b505f610269565b6301ffc9a760e01b1490505f610284565b5f80fd5b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9060206102d59281815201906102a0565b90565b3461029c57604036600319011261029c576102406102fa602435600435611ab3565b6040519182916020835260208301906102a0565b3461029c575f36600319011261029c576020600254604051908152f35b634e487b7160e01b5f52604160045260245ffd5b90601f801991011681019081106001600160401b0382111761036057604052565b61032b565b6001600160401b0381116103605760051b60200190565b9080601f8301121561029c57813561039381610365565b926103a1604051948561033f565b81845260208085019260051b82010192831161029c57602001905b8282106103c95750505090565b81358152602091820191016103bc565b602081016020825282518091526040820191602060408360051b8301019401925f915b83831061040b57505050505090565b9091929394602080610429600193603f1986820301875289516102a0565b970193019301919392906103fc565b3461029c57604036600319011261029c576004356001600160401b03811161029c5761046890369060040161037c565b6024356001600160401b03811161029c5761048790369060040161037c565b9061049281516113b7565b915f5b82518110156104dc57806104c06104ae60019386611414565b516104b98386611414565b5190611ab3565b6104ca8287611414565b526104d58186611414565b5001610495565b6040518061024086826103d9565b3461029c57602036600319011261029c57602061050860043561142d565b6040516001600160a01b039091168152f35b600435906001600160a01b038216820361029c57565b602435906001600160a01b038216820361029c57565b3461029c57604036600319011261029c57602061057661056461051a565b6024359061057182611b49565b611b68565b6040519015158152f35b3461029c57604036600319011261029c57610599610530565b6007546105bc906105b0906001600160a01b031681565b6001600160a01b031690565b60405163039b39f960e11b81523360048201529190602090839060249082905afa91821561066757610636926105f9915f91610638575b50611481565b6040516020810190610623816106156004358560209181520190565b03601f19810183528261033f565b51902061062e6114cd565b913390611c7b565b005b61065a915060203d602011610660575b610652818361033f565b810190611461565b5f6105f3565b503d610648565b611476565b3461029c575f36600319011261029c576007546040516001600160a01b039091168152602090f35b3461029c575f36600319011261029c576106ac611d90565b4780156106d0575f805490918291829182916001600160a01b031682f11561066757005b60405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b60206040818301928281528451809452019201905f5b81811061072f5750505090565b82516001600160a01b0316845260209384019390920191600101610722565b3461029c57602036600319011261029c5760043561076b81611b49565b5f52600560205260405f206040519081602082549182815201915f5260205f20905f5b8181106107b157610240856107a58187038261033f565b6040519182918261070c565b825484526020909301926001928301920161078e565b8015150361029c57565b6001600160401b03811161036057601f01601f191660200190565b81601f8201121561029c57803590610803826107d1565b92610811604051948561033f565b8284526020838301011161029c57815f926020809301838601378301015290565b3461029c5760a036600319011261029c5761084b61051a565b610853610530565b90606435604435610863826107c7565b608435936001600160401b03851161029c576108866106369536906004016107ec565b936114ed565b3461029c57602036600319011261029c576102406102fa600435611658565b3461029c57602036600319011261029c576004356001600160401b03811161029c573660238201121561029c578060040135906001600160401b03821161029c573660248360051b8301011161029c5761024091602461090b920161173c565b604051918291826103d9565b3461029c57602036600319011261029c5761093061051a565b610938611d90565b60025460405160208101908282526020815261095560408261033f565b519020916109616114cd565b916001600160a01b038216908115610a6f575f858152600360205260409020546001600160a01b0316610a5b579380610a56926109a86109a361063698611dca565b600255565b6001600160a01b0385165f9081526004602052604090206109ca90839061267e565b50610a00856109e1845f52600360205260405f2090565b80546001600160a01b0319166001600160a01b03909216919091179055565b5f7fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf60405180610a318a3383611bb7565b0390a4610a48604051948592853360208601611c0a565b03601f19810184528361033f565b61257f565b6334c7b51160e01b5f52600485905260245ffd5b6324ecef4d60e01b5f5260045ffd5b3461029c57602036600319011261029c576001600160a01b03610a9f61051a565b165f526004602052602060405f2054604051908152f35b3461029c575f36600319011261029c57610ace611d90565b5f546001600160a01b03811680610ae157005b5f907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a36001600160a01b0319165f55005b9080601f8301121561029c57813590610b2d82610365565b92610b3b604051948561033f565b82845260208085019360051b82010191821161029c57602001915b818310610b635750505090565b82356001600160a01b038116810361029c57815260209283019201610b56565b9080601f8301121561029c578135610b9a81610365565b92610ba8604051948561033f565b81845260208085019260051b82010192831161029c57602001905b828210610bd05750505090565b602080918335610bdf816107c7565b815201910190610bc3565b9080601f8301121561029c578135610c0181610365565b92610c0f604051948561033f565b81845260208085019260051b8201019183831161029c5760208201905b838210610c3b57505050505090565b81356001600160401b03811161029c57602091610c5d878480948801016107ec565b815201910190610c2c565b3461029c5760a036600319011261029c576004356001600160401b03811161029c57610c98903690600401610b15565b6024356001600160401b03811161029c57610cb7903690600401610b15565b906044356001600160401b03811161029c57610cd790369060040161037c565b6064356001600160401b03811161029c57610cf6903690600401610b83565b90608435936001600160401b03851161029c57610d1a610636953690600401610bea565b936117ff565b604036600319011261029c576004356024356001600160401b03811161029c57610d4e9036906004016107ec565b610d56611d90565b34610d645761063691611ddd565b63f36ba73760e01b5f5260045ffd5b3461029c57606036600319011261029c57610d8c61051a565b602435906044356001600160401b03811161029c57610daf9036906004016107ec565b90610db98361142d565b6001600160a01b03811690338203610e9c57506001600160a01b0382168015610e8d57808214610e7e57610e05610e0184610dfc885f52600560205260405f2090565b611f01565b1590565b610e5d579380610e5892610636967f1b1b58aa2ec0cec2228b2d37124556d41f5a1f7b12f089171f896cc23667121560405180610e428a826102c4565b0390a4610a4860405194859233602085016118cb565b6126e6565b6314ec4d6d60e31b5f526001600160a01b038316600452602485905260445ffd5b6344fed6b160e11b5f5260045ffd5b639577b8b360e01b5f5260045ffd5b632d938f5160e11b5f526001600160a01b031660045260248490523360445260645ffd5b3461029c575f36600319011261029c575f546040516001600160a01b039091168152602090f35b604036600319011261029c576004356001600160401b03811161029c57610f1290369060040161037c565b6024356001600160401b03811161029c57610f31903690600401610bea565b90610f3a611d90565b34610d64578051825103610f9157805115610f82575f5b81518110156106365780610f7c610f6a60019385611414565b51610f758387611414565b5190611ddd565b01610f51565b6397da5f9560e01b5f5260045ffd5b633bcc897960e01b5f5260045ffd5b60206040818301928281528451809452019201905f5b818110610fc35750505090565b8251845260209384019390920191600101610fb6565b3461029c57602036600319011261029c576001600160a01b03610ffa61051a565b165f52600460205260405f206040519081602082549182815201915f5260205f20905f5b81811061104157610240856110358187038261033f565b60405191829182610fa0565b825484526020909301926001928301920161101e565b3461029c57602036600319011261029c5761107061051a565b611078611d90565b600780546001600160a01b0319166001600160a01b0392909216919091179055005b3461029c57606036600319011261029c576004356001600160401b03811161029c576110ca90369060040161037c565b6024356001600160401b03811161029c576110e990369060040161037c565b6044356001600160401b03811161029c57611108903690600401610bea565b91611111611d90565b8051825180911490811591611189575b5061117a5780511561116b575f5b8151811015610636578061116561114860019385611414565b516111538387611414565b5161115e8489611414565b5191612047565b0161112f565b6380c9830560e01b5f5260045ffd5b6317d38eff60e11b5f5260045ffd5b9050835114155f611121565b3461029c57606036600319011261029c576044356004356024356001600160401b03831161029c576111ce6106369336906004016107ec565b916111d7611d90565b612047565b3461029c57608036600319011261029c576111f561051a565b6024359060443590611206826107c7565b6064356001600160401b03811161029c576112259036906004016107ec565b9161122f8461142d565b6001600160a01b038116338103611283576001600160a01b038416908115610e8d5714610e7e578382866112639386612181565b61126957005b610e5861063693610a4860405194859233602085016118f6565b632d938f5160e11b5f526001600160a01b03821660045260248690523360445260645ffd5b3461029c57602036600319011261029c576004356001600160401b03811161029c576112d890369060040161037c565b6112e281516113b7565b905f5b815181101561132057806113046112fe60019385611414565b51611658565b61130e8286611414565b526113198185611414565b50016112e5565b6040518061024085826103d9565b3461029c57602036600319011261029c5761134761051a565b61134f611d90565b6001600160a01b031680156113a8575f546001600160a01b03811680830361137357005b82907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36001600160a01b031916175f55005b6306b620db60e21b5f5260045ffd5b906113c182610365565b6113ce604051918261033f565b82815280926113df601f1991610365565b01905f5b8281106113ef57505050565b8060606020809385010152016113e3565b634e487b7160e01b5f52603260045260245ffd5b80518210156114285760209160051b010190565b611400565b5f818152600360205260409020546001600160a01b031690811561144f575090565b635747cd1b60e11b5f5260045260245ffd5b9081602091031261029c57516102d5816107c7565b6040513d5f823e3d90fd5b1561148857565b60405162461bcd60e51b815260206004820152601e60248201527f5765617261626c6520636f6e7472616374206e6f7420617070726f76656400006044820152606490fd5b604051906114dc60408361033f565b6002825261060f60f31b6020830152565b9291926114fa8433611b68565b15611641576001600160a01b0382811695908216918287146116325761151f8661142d565b6001600160a01b03811684900361160c57508615610a6f57611600868061160a9961160596611550610a489b61142d565b5061155b838761240b565b6001600160a01b0386165f90815260046020526040902061157d908490612809565b506001600160a01b0389165f9081526004602052604090206115a090849061267e565b506115b7896109e1855f52600360205260405f2090565b6040517fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90806115e98a8e3384611be0565b0390a4604051978894859288863360208701611c41565b612749565b6125ee565b565b632d938f5160e11b5f526001600160a01b0390811660045260248790521660445260645ffd5b635d67d6c160e01b5f5260045ffd5b83631294d2a960e01b5f526004523360245260445ffd5b5f52600160205260405f2060405190815f82549261167584611a7b565b80845293600181169081156116de575060011461169a575b506102d59250038261033f565b90505f9291925260205f20905f915b8183106116c25750509060206102d5928201015f61168d565b60209193508060019154838588010152019101909183926116a9565b9050602092506102d594915060ff191682840152151560051b8201015f61168d565b908092918237015f815290565b3d15611737573d9061171e826107d1565b9161172c604051938461033f565b82523d5f602084013e565b606090565b9190611747816113b7565b925f5b82811061175657505050565b82811015611428578060051b820135601e198336030181121561029c5782018035906001600160401b03821161029c57602001813603811361029c575f91818392506117a760405180938193611700565b0390305af46117b461170d565b90156117da57906001916117c88288611414565b526117d38187611414565b500161174a565b8051909190156117ed5750805190602001fd5b63234eb81960e01b5f5260045260245ffd5b9493909192855193835185148015906118c0575b80156118b5575b80156118aa575b61189b575f5b858110611838575050505050509050565b8061189561185861184b6001948c611414565b516001600160a01b031690565b61186561184b848a611414565b61186f8487611414565b5161188361187d868a611414565b51151590565b9161188e868b611414565b51936114ed565b01611827565b6393a8311960e01b5f5260045ffd5b508251851415611821565b50815185141561181a565b508051851415611813565b6102d5939260809260018060a01b0316825260208201526001604082015281606082015201906102a0565b6102d5939260809260018060a01b0316825260208201525f604082015281606082015201906102a0565b3415611935576330fa4a2160e11b5f5260045ffd5b606460405163e5099ee360e01b815260206004820152600460248201525f6044820152fd5b6004361061196c576102d5905f612238565b6044604051809263e5099ee360e01b825260206004830152806024830152805f848401375f828201840152601f01601f19168101030190fd5b6119ed6119e8604051696773c5a04a6d4300884b60b11b60208201525f602a8201526301ffc9a760e01b602c820152602081526119e360408261033f565b6127ac565b611658565b805160148114159081611a52575b50611a3157611a0c611a1291612335565b60601c90565b906001600160a01b03821615611a2b576102d5916123d8565b50505f90565b6040516342bfe79f60e01b8152908190611a4e90600483016102c4565b0390fd5b905015155f6119fb565b919060405192602084015260408301526040825261160a60608361033f565b90600182811c92168015611aa9575b6020831014611a9557565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611a8a565b90611abd91611a5c565b602081519101205f52600160205260405f2060405190815f825492611ae184611a7b565b80845293600181169081156116de5750600114611b0557506102d59250038261033f565b90505f9291925260205f20905f915b818310611b2d5750509060206102d5928201015f61168d565b6020919350806001915483858801015201910190918392611b14565b5f818152600360205260409020546001600160a01b03161561144f5750565b6001600160a01b03611b798361142d565b6001600160a01b0390921691168114918215611b9457505090565b6102d592505f52600560205260405f206001915f520160205260405f2054151590565b6001600160a01b039091168152600160208201526060604082018190526102d5929101906102a0565b6001600160a01b03909116815290151560208201526060604082018190526102d5929101906102a0565b6001600160a01b0391821681525f602082015291166040820152606081019190915260a0608082018190526102d5929101906102a0565b6001600160a01b03918216815291811660208301529091166040820152606081019190915260a0608082018190526102d5929101906102a0565b926001600160a01b038083169392919085169081851461163257611c9e8461142d565b6001600160a01b038116839003611d6957508415610a6f5761160a956116008580610a489861160596611cd15f9a61142d565b50611cdc838761240b565b6001600160a01b0386165f908152600460205260409020611cfe908490612809565b506001600160a01b0389165f908152600460205260409020611d2190849061267e565b50611d38896109e1855f52600360205260405f2090565b7fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf604051806115e98a8e3384611be0565b632d938f5160e11b5f526001600160a01b039081166004526024859052861660445260645ffd5b5f546001600160a01b03163303611da357565b63bf1169c560e01b5f523360045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f198114611dd85760010190565b611db6565b907ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d8214611ef2577fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af18203611e3b576385c169bd60e01b5f5260045ffd5b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db9327568203611e7157630eceab6760e31b5f5260045ffd5b7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb38203611ea757634ef6d7fb60e01b5f5260045ffd5b611eed7fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b291835f526001602052611ee18160405f20611f80565b604051918291826102c4565b0390a2565b631b32400560e11b5f5260045ffd5b6102d5916001600160a01b03169061267e565b91611f2d9183549060031b91821b915f19901b19161790565b9055565b601f8211611f3e57505050565b5f5260205f20906020601f840160051c83019310611f76575b601f0160051c01905b818110611f6b575050565b5f8155600101611f60565b9091508190611f57565b91909182516001600160401b03811161036057611fa781611fa18454611a7b565b84611f31565b6020601f8211600114611fe2578190611f2d9394955f92611fd7575b50508160011b915f199060031b1c19161790565b015190505f80611fc3565b601f19821690611ff5845f5260205f2090565b915f5b81811061202f57509583600195969710612017575b505050811b019055565b01515f1960f88460031b161c191690555f808061200d565b9192602060018192868b015181550194019201611ff8565b90916120538383611a5c565b602081519101205f52600160205260405f2081516001600160401b0381116103605761208381611fa18454611a7b565b6020601f82116001146120f457916120d6827fa6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb95936120e4955f916120e9575b508160011b915f199060031b1c19161790565b9055604051918291826102c4565b0390a3565b90508401515f6120c3565b601f19821690612107845f5260205f2090565b915f5b8181106121695750926120e49492600192827fa6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb989610612151575b5050811b019055611ee1565b8501515f1960f88460031b161c191690555f80612145565b9192602060018192868a01518155019401920161210a565b919392845f5260056020526121a360405f209360018060a01b03168094612809565b156121f957604080519115158252602082018190526001600160a01b03909216937fc78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c9282916121f4918301906102a0565b0390a4565b84836312a8c6a360e21b5f5260045260245260445ffd5b826034959392823701916bffffffffffffffffffffffff199060601b16825260148201520190565b63ffffffff60e01b5f3516916122846119e8604051696773c5a04a6d4300884b60b11b60208201525f602a82015263ffffffff60e01b8616602c820152602081526119e360408261033f565b80516014811415908161232b575b5061230657611a0c6122a391612335565b926001600160a01b038416156122f45750915f92916106156122d5859460405192839160208301953491339188612210565b519134905af16122e361170d565b90156122ec5790565b602081519101fd5b63bb370b2b60e01b5f5260045260245ffd5b6040516342bfe79f60e01b815260206004820152908190611a4e9060248301906102a0565b905015155f612292565b9060208251920151916bffffffffffffffffffffffff198316926014821061235b575050565b6bffffffffffffffffffffffff1960149290920360031b82901b16169150565b5f602091604051838101906301ffc9a760e01b8252631aed5a8560e21b6024820152602481526123ac60448261033f565b5191617530fa5f513d826123cc575b50816123c5575090565b9050151590565b6020111591505f6123bb565b5f90602092604051848101916301ffc9a760e01b835263ffffffff60e01b166024820152602481526123ac60448261033f565b815f52600560205260405f20918254915f936020945b84811061243057505050505050565b815415611428575f82815286902054604051906001600160a01b0316612456888361033f565b5f8252855f526005885261247760405f209160018060a01b03168092612809565b156124cf576001929186917fc78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c6040515f815260408c820152806124c6888060a01b038b169560408301906102a0565b0390a401612421565b85906312a8c6a360e21b5f5260045260245260445ffd5b60208183031261029c578051906001600160401b03821161029c570181601f8201121561029c57805190612519826107d1565b92612527604051948561033f565b8284526020838301011161029c57815f9260208093018386015e8301015290565b9060406102d5927f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d815281602082015201906102a0565b6125888161237b565b156125ea57604051631aed5a8560e21b8152915f9183918290849082906125b29060048301612548565b03926001600160a01b03165af18015610667576125cc5750565b6125e7903d805f833e6125df818361033f565b8101906124e6565b50565b5050565b91906125f98361237b565b1561262257506125b25f928392604051948580948193631aed5a8560e21b835260048301612548565b90501561262c5750565b803b1561264e57634349776d60e01b5f526001600160a01b031660045260245ffd5b630317313760e01b5f526001600160a01b031660045260245ffd5b8054821015611428575f5260205f2001905f90565b5f828152600182016020526040902054611a2b578054906801000000000000000082101561036057826126d16126bb846001809601855584612669565b819391549060031b91821b915f19901b19161790565b90558054925f520160205260405f2055600190565b6126ef8161237b565b6126f7575050565b6125b25f92918392604051948580948193631aed5a8560e21b83527f8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f0097060048401526040602484015260448301906102a0565b6127528161237b565b61275a575050565b6125b25f92918392604051948580948193631aed5a8560e21b83527fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab0060048401526040602484015260448301906102a0565b6020815191015190602081106127c0575090565b5f199060200360031b1b1690565b805480156127f5575f1901906127e48282612669565b8154905f199060031b1b1916905555565b634e487b7160e01b5f52603160045260245ffd5b6001810191805f528260205260405f2054928315155f146128b1575f198401848111611dd85783545f19810194908511611dd8575f95858361286497612857950361286a575b5050506127ce565b905f5260205260405f2090565b55600190565b61289a6128949161288b6128816128a89588612669565b90549060031b1c90565b92839187612669565b90611f14565b85905f5260205260405f2090565b555f808061284f565b505050505f9056fea264697066735822122043faafb82e12a010fcf2ba5de82be64fc33bb6cd36eac40d9ff0f6732d7f1e8064736f6c634300081e0033deba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1e0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3eafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480cf675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756ece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2",
    "deployedBytecode": "6080604052600436101561002a575b36156100255761001d3661195a565b602081519101f35b611920565b5f3560e01c806301ffc9a7146101e957806316e023b3146101e457806318160ddd146101df5780631d26fce6146101da578063217b2270146101d55780632a3654a4146101d0578063354bedd9146101cb57806335615ec8146101c65780633ccfd60b146101c157806349a6078d146101bc578063511b6952146101b757806354f6127f146101b25780636963d438146101ad5780636a627842146101a857806370a08231146101a3578063715018a61461019e5780637e87632c146101995780637f23690c1461019457806386a10ddd1461018f5780638da5cb5b1461018a5780639790242114610185578063a3b261f214610180578063b6fea40f1461017b578063be9f0e6f14610176578063d6c1407c14610171578063db8c96631461016c578063dedff9c6146101675763f2fde38b0361000e5761132e565b6112a8565b6111dc565b611195565b61109a565b611057565b610fd9565b610ee7565b610ec0565b610d73565b610d20565b610c68565b610ab6565b610a7e565b610917565b6108ab565b61088c565b610832565b61074e565b610694565b61066c565b610580565b610546565b6104ea565b610438565b61030e565b6102d8565b3461029c57602036600319011261029c576004356001600160e01b0319811680820361029c5761024091631d138b8360e11b8214918215610254575b508115610244575b5060405190151581529081906020820190565b0390f35b61024e91506119a5565b5f61022d565b90915063a918fa6b60e01b8114908115610271575b50905f610225565b6318a6a9a560e21b81149150811561028b575b505f610269565b6301ffc9a760e01b1490505f610284565b5f80fd5b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9060206102d59281815201906102a0565b90565b3461029c57604036600319011261029c576102406102fa602435600435611ab3565b6040519182916020835260208301906102a0565b3461029c575f36600319011261029c576020600254604051908152f35b634e487b7160e01b5f52604160045260245ffd5b90601f801991011681019081106001600160401b0382111761036057604052565b61032b565b6001600160401b0381116103605760051b60200190565b9080601f8301121561029c57813561039381610365565b926103a1604051948561033f565b81845260208085019260051b82010192831161029c57602001905b8282106103c95750505090565b81358152602091820191016103bc565b602081016020825282518091526040820191602060408360051b8301019401925f915b83831061040b57505050505090565b9091929394602080610429600193603f1986820301875289516102a0565b970193019301919392906103fc565b3461029c57604036600319011261029c576004356001600160401b03811161029c5761046890369060040161037c565b6024356001600160401b03811161029c5761048790369060040161037c565b9061049281516113b7565b915f5b82518110156104dc57806104c06104ae60019386611414565b516104b98386611414565b5190611ab3565b6104ca8287611414565b526104d58186611414565b5001610495565b6040518061024086826103d9565b3461029c57602036600319011261029c57602061050860043561142d565b6040516001600160a01b039091168152f35b600435906001600160a01b038216820361029c57565b602435906001600160a01b038216820361029c57565b3461029c57604036600319011261029c57602061057661056461051a565b6024359061057182611b49565b611b68565b6040519015158152f35b3461029c57604036600319011261029c57610599610530565b6007546105bc906105b0906001600160a01b031681565b6001600160a01b031690565b60405163039b39f960e11b81523360048201529190602090839060249082905afa91821561066757610636926105f9915f91610638575b50611481565b6040516020810190610623816106156004358560209181520190565b03601f19810183528261033f565b51902061062e6114cd565b913390611c7b565b005b61065a915060203d602011610660575b610652818361033f565b810190611461565b5f6105f3565b503d610648565b611476565b3461029c575f36600319011261029c576007546040516001600160a01b039091168152602090f35b3461029c575f36600319011261029c576106ac611d90565b4780156106d0575f805490918291829182916001600160a01b031682f11561066757005b60405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b60206040818301928281528451809452019201905f5b81811061072f5750505090565b82516001600160a01b0316845260209384019390920191600101610722565b3461029c57602036600319011261029c5760043561076b81611b49565b5f52600560205260405f206040519081602082549182815201915f5260205f20905f5b8181106107b157610240856107a58187038261033f565b6040519182918261070c565b825484526020909301926001928301920161078e565b8015150361029c57565b6001600160401b03811161036057601f01601f191660200190565b81601f8201121561029c57803590610803826107d1565b92610811604051948561033f565b8284526020838301011161029c57815f926020809301838601378301015290565b3461029c5760a036600319011261029c5761084b61051a565b610853610530565b90606435604435610863826107c7565b608435936001600160401b03851161029c576108866106369536906004016107ec565b936114ed565b3461029c57602036600319011261029c576102406102fa600435611658565b3461029c57602036600319011261029c576004356001600160401b03811161029c573660238201121561029c578060040135906001600160401b03821161029c573660248360051b8301011161029c5761024091602461090b920161173c565b604051918291826103d9565b3461029c57602036600319011261029c5761093061051a565b610938611d90565b60025460405160208101908282526020815261095560408261033f565b519020916109616114cd565b916001600160a01b038216908115610a6f575f858152600360205260409020546001600160a01b0316610a5b579380610a56926109a86109a361063698611dca565b600255565b6001600160a01b0385165f9081526004602052604090206109ca90839061267e565b50610a00856109e1845f52600360205260405f2090565b80546001600160a01b0319166001600160a01b03909216919091179055565b5f7fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf60405180610a318a3383611bb7565b0390a4610a48604051948592853360208601611c0a565b03601f19810184528361033f565b61257f565b6334c7b51160e01b5f52600485905260245ffd5b6324ecef4d60e01b5f5260045ffd5b3461029c57602036600319011261029c576001600160a01b03610a9f61051a565b165f526004602052602060405f2054604051908152f35b3461029c575f36600319011261029c57610ace611d90565b5f546001600160a01b03811680610ae157005b5f907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a36001600160a01b0319165f55005b9080601f8301121561029c57813590610b2d82610365565b92610b3b604051948561033f565b82845260208085019360051b82010191821161029c57602001915b818310610b635750505090565b82356001600160a01b038116810361029c57815260209283019201610b56565b9080601f8301121561029c578135610b9a81610365565b92610ba8604051948561033f565b81845260208085019260051b82010192831161029c57602001905b828210610bd05750505090565b602080918335610bdf816107c7565b815201910190610bc3565b9080601f8301121561029c578135610c0181610365565b92610c0f604051948561033f565b81845260208085019260051b8201019183831161029c5760208201905b838210610c3b57505050505090565b81356001600160401b03811161029c57602091610c5d878480948801016107ec565b815201910190610c2c565b3461029c5760a036600319011261029c576004356001600160401b03811161029c57610c98903690600401610b15565b6024356001600160401b03811161029c57610cb7903690600401610b15565b906044356001600160401b03811161029c57610cd790369060040161037c565b6064356001600160401b03811161029c57610cf6903690600401610b83565b90608435936001600160401b03851161029c57610d1a610636953690600401610bea565b936117ff565b604036600319011261029c576004356024356001600160401b03811161029c57610d4e9036906004016107ec565b610d56611d90565b34610d645761063691611ddd565b63f36ba73760e01b5f5260045ffd5b3461029c57606036600319011261029c57610d8c61051a565b602435906044356001600160401b03811161029c57610daf9036906004016107ec565b90610db98361142d565b6001600160a01b03811690338203610e9c57506001600160a01b0382168015610e8d57808214610e7e57610e05610e0184610dfc885f52600560205260405f2090565b611f01565b1590565b610e5d579380610e5892610636967f1b1b58aa2ec0cec2228b2d37124556d41f5a1f7b12f089171f896cc23667121560405180610e428a826102c4565b0390a4610a4860405194859233602085016118cb565b6126e6565b6314ec4d6d60e31b5f526001600160a01b038316600452602485905260445ffd5b6344fed6b160e11b5f5260045ffd5b639577b8b360e01b5f5260045ffd5b632d938f5160e11b5f526001600160a01b031660045260248490523360445260645ffd5b3461029c575f36600319011261029c575f546040516001600160a01b039091168152602090f35b604036600319011261029c576004356001600160401b03811161029c57610f1290369060040161037c565b6024356001600160401b03811161029c57610f31903690600401610bea565b90610f3a611d90565b34610d64578051825103610f9157805115610f82575f5b81518110156106365780610f7c610f6a60019385611414565b51610f758387611414565b5190611ddd565b01610f51565b6397da5f9560e01b5f5260045ffd5b633bcc897960e01b5f5260045ffd5b60206040818301928281528451809452019201905f5b818110610fc35750505090565b8251845260209384019390920191600101610fb6565b3461029c57602036600319011261029c576001600160a01b03610ffa61051a565b165f52600460205260405f206040519081602082549182815201915f5260205f20905f5b81811061104157610240856110358187038261033f565b60405191829182610fa0565b825484526020909301926001928301920161101e565b3461029c57602036600319011261029c5761107061051a565b611078611d90565b600780546001600160a01b0319166001600160a01b0392909216919091179055005b3461029c57606036600319011261029c576004356001600160401b03811161029c576110ca90369060040161037c565b6024356001600160401b03811161029c576110e990369060040161037c565b6044356001600160401b03811161029c57611108903690600401610bea565b91611111611d90565b8051825180911490811591611189575b5061117a5780511561116b575f5b8151811015610636578061116561114860019385611414565b516111538387611414565b5161115e8489611414565b5191612047565b0161112f565b6380c9830560e01b5f5260045ffd5b6317d38eff60e11b5f5260045ffd5b9050835114155f611121565b3461029c57606036600319011261029c576044356004356024356001600160401b03831161029c576111ce6106369336906004016107ec565b916111d7611d90565b612047565b3461029c57608036600319011261029c576111f561051a565b6024359060443590611206826107c7565b6064356001600160401b03811161029c576112259036906004016107ec565b9161122f8461142d565b6001600160a01b038116338103611283576001600160a01b038416908115610e8d5714610e7e578382866112639386612181565b61126957005b610e5861063693610a4860405194859233602085016118f6565b632d938f5160e11b5f526001600160a01b03821660045260248690523360445260645ffd5b3461029c57602036600319011261029c576004356001600160401b03811161029c576112d890369060040161037c565b6112e281516113b7565b905f5b815181101561132057806113046112fe60019385611414565b51611658565b61130e8286611414565b526113198185611414565b50016112e5565b6040518061024085826103d9565b3461029c57602036600319011261029c5761134761051a565b61134f611d90565b6001600160a01b031680156113a8575f546001600160a01b03811680830361137357005b82907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36001600160a01b031916175f55005b6306b620db60e21b5f5260045ffd5b906113c182610365565b6113ce604051918261033f565b82815280926113df601f1991610365565b01905f5b8281106113ef57505050565b8060606020809385010152016113e3565b634e487b7160e01b5f52603260045260245ffd5b80518210156114285760209160051b010190565b611400565b5f818152600360205260409020546001600160a01b031690811561144f575090565b635747cd1b60e11b5f5260045260245ffd5b9081602091031261029c57516102d5816107c7565b6040513d5f823e3d90fd5b1561148857565b60405162461bcd60e51b815260206004820152601e60248201527f5765617261626c6520636f6e7472616374206e6f7420617070726f76656400006044820152606490fd5b604051906114dc60408361033f565b6002825261060f60f31b6020830152565b9291926114fa8433611b68565b15611641576001600160a01b0382811695908216918287146116325761151f8661142d565b6001600160a01b03811684900361160c57508615610a6f57611600868061160a9961160596611550610a489b61142d565b5061155b838761240b565b6001600160a01b0386165f90815260046020526040902061157d908490612809565b506001600160a01b0389165f9081526004602052604090206115a090849061267e565b506115b7896109e1855f52600360205260405f2090565b6040517fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90806115e98a8e3384611be0565b0390a4604051978894859288863360208701611c41565b612749565b6125ee565b565b632d938f5160e11b5f526001600160a01b0390811660045260248790521660445260645ffd5b635d67d6c160e01b5f5260045ffd5b83631294d2a960e01b5f526004523360245260445ffd5b5f52600160205260405f2060405190815f82549261167584611a7b565b80845293600181169081156116de575060011461169a575b506102d59250038261033f565b90505f9291925260205f20905f915b8183106116c25750509060206102d5928201015f61168d565b60209193508060019154838588010152019101909183926116a9565b9050602092506102d594915060ff191682840152151560051b8201015f61168d565b908092918237015f815290565b3d15611737573d9061171e826107d1565b9161172c604051938461033f565b82523d5f602084013e565b606090565b9190611747816113b7565b925f5b82811061175657505050565b82811015611428578060051b820135601e198336030181121561029c5782018035906001600160401b03821161029c57602001813603811361029c575f91818392506117a760405180938193611700565b0390305af46117b461170d565b90156117da57906001916117c88288611414565b526117d38187611414565b500161174a565b8051909190156117ed5750805190602001fd5b63234eb81960e01b5f5260045260245ffd5b9493909192855193835185148015906118c0575b80156118b5575b80156118aa575b61189b575f5b858110611838575050505050509050565b8061189561185861184b6001948c611414565b516001600160a01b031690565b61186561184b848a611414565b61186f8487611414565b5161188361187d868a611414565b51151590565b9161188e868b611414565b51936114ed565b01611827565b6393a8311960e01b5f5260045ffd5b508251851415611821565b50815185141561181a565b508051851415611813565b6102d5939260809260018060a01b0316825260208201526001604082015281606082015201906102a0565b6102d5939260809260018060a01b0316825260208201525f604082015281606082015201906102a0565b3415611935576330fa4a2160e11b5f5260045ffd5b606460405163e5099ee360e01b815260206004820152600460248201525f6044820152fd5b6004361061196c576102d5905f612238565b6044604051809263e5099ee360e01b825260206004830152806024830152805f848401375f828201840152601f01601f19168101030190fd5b6119ed6119e8604051696773c5a04a6d4300884b60b11b60208201525f602a8201526301ffc9a760e01b602c820152602081526119e360408261033f565b6127ac565b611658565b805160148114159081611a52575b50611a3157611a0c611a1291612335565b60601c90565b906001600160a01b03821615611a2b576102d5916123d8565b50505f90565b6040516342bfe79f60e01b8152908190611a4e90600483016102c4565b0390fd5b905015155f6119fb565b919060405192602084015260408301526040825261160a60608361033f565b90600182811c92168015611aa9575b6020831014611a9557565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611a8a565b90611abd91611a5c565b602081519101205f52600160205260405f2060405190815f825492611ae184611a7b565b80845293600181169081156116de5750600114611b0557506102d59250038261033f565b90505f9291925260205f20905f915b818310611b2d5750509060206102d5928201015f61168d565b6020919350806001915483858801015201910190918392611b14565b5f818152600360205260409020546001600160a01b03161561144f5750565b6001600160a01b03611b798361142d565b6001600160a01b0390921691168114918215611b9457505090565b6102d592505f52600560205260405f206001915f520160205260405f2054151590565b6001600160a01b039091168152600160208201526060604082018190526102d5929101906102a0565b6001600160a01b03909116815290151560208201526060604082018190526102d5929101906102a0565b6001600160a01b0391821681525f602082015291166040820152606081019190915260a0608082018190526102d5929101906102a0565b6001600160a01b03918216815291811660208301529091166040820152606081019190915260a0608082018190526102d5929101906102a0565b926001600160a01b038083169392919085169081851461163257611c9e8461142d565b6001600160a01b038116839003611d6957508415610a6f5761160a956116008580610a489861160596611cd15f9a61142d565b50611cdc838761240b565b6001600160a01b0386165f908152600460205260409020611cfe908490612809565b506001600160a01b0389165f908152600460205260409020611d2190849061267e565b50611d38896109e1855f52600360205260405f2090565b7fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf604051806115e98a8e3384611be0565b632d938f5160e11b5f526001600160a01b039081166004526024859052861660445260645ffd5b5f546001600160a01b03163303611da357565b63bf1169c560e01b5f523360045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f198114611dd85760010190565b611db6565b907ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d8214611ef2577fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af18203611e3b576385c169bd60e01b5f5260045ffd5b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db9327568203611e7157630eceab6760e31b5f5260045ffd5b7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb38203611ea757634ef6d7fb60e01b5f5260045ffd5b611eed7fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b291835f526001602052611ee18160405f20611f80565b604051918291826102c4565b0390a2565b631b32400560e11b5f5260045ffd5b6102d5916001600160a01b03169061267e565b91611f2d9183549060031b91821b915f19901b19161790565b9055565b601f8211611f3e57505050565b5f5260205f20906020601f840160051c83019310611f76575b601f0160051c01905b818110611f6b575050565b5f8155600101611f60565b9091508190611f57565b91909182516001600160401b03811161036057611fa781611fa18454611a7b565b84611f31565b6020601f8211600114611fe2578190611f2d9394955f92611fd7575b50508160011b915f199060031b1c19161790565b015190505f80611fc3565b601f19821690611ff5845f5260205f2090565b915f5b81811061202f57509583600195969710612017575b505050811b019055565b01515f1960f88460031b161c191690555f808061200d565b9192602060018192868b015181550194019201611ff8565b90916120538383611a5c565b602081519101205f52600160205260405f2081516001600160401b0381116103605761208381611fa18454611a7b565b6020601f82116001146120f457916120d6827fa6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb95936120e4955f916120e9575b508160011b915f199060031b1c19161790565b9055604051918291826102c4565b0390a3565b90508401515f6120c3565b601f19821690612107845f5260205f2090565b915f5b8181106121695750926120e49492600192827fa6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb989610612151575b5050811b019055611ee1565b8501515f1960f88460031b161c191690555f80612145565b9192602060018192868a01518155019401920161210a565b919392845f5260056020526121a360405f209360018060a01b03168094612809565b156121f957604080519115158252602082018190526001600160a01b03909216937fc78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c9282916121f4918301906102a0565b0390a4565b84836312a8c6a360e21b5f5260045260245260445ffd5b826034959392823701916bffffffffffffffffffffffff199060601b16825260148201520190565b63ffffffff60e01b5f3516916122846119e8604051696773c5a04a6d4300884b60b11b60208201525f602a82015263ffffffff60e01b8616602c820152602081526119e360408261033f565b80516014811415908161232b575b5061230657611a0c6122a391612335565b926001600160a01b038416156122f45750915f92916106156122d5859460405192839160208301953491339188612210565b519134905af16122e361170d565b90156122ec5790565b602081519101fd5b63bb370b2b60e01b5f5260045260245ffd5b6040516342bfe79f60e01b815260206004820152908190611a4e9060248301906102a0565b905015155f612292565b9060208251920151916bffffffffffffffffffffffff198316926014821061235b575050565b6bffffffffffffffffffffffff1960149290920360031b82901b16169150565b5f602091604051838101906301ffc9a760e01b8252631aed5a8560e21b6024820152602481526123ac60448261033f565b5191617530fa5f513d826123cc575b50816123c5575090565b9050151590565b6020111591505f6123bb565b5f90602092604051848101916301ffc9a760e01b835263ffffffff60e01b166024820152602481526123ac60448261033f565b815f52600560205260405f20918254915f936020945b84811061243057505050505050565b815415611428575f82815286902054604051906001600160a01b0316612456888361033f565b5f8252855f526005885261247760405f209160018060a01b03168092612809565b156124cf576001929186917fc78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c6040515f815260408c820152806124c6888060a01b038b169560408301906102a0565b0390a401612421565b85906312a8c6a360e21b5f5260045260245260445ffd5b60208183031261029c578051906001600160401b03821161029c570181601f8201121561029c57805190612519826107d1565b92612527604051948561033f565b8284526020838301011161029c57815f9260208093018386015e8301015290565b9060406102d5927f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d815281602082015201906102a0565b6125888161237b565b156125ea57604051631aed5a8560e21b8152915f9183918290849082906125b29060048301612548565b03926001600160a01b03165af18015610667576125cc5750565b6125e7903d805f833e6125df818361033f565b8101906124e6565b50565b5050565b91906125f98361237b565b1561262257506125b25f928392604051948580948193631aed5a8560e21b835260048301612548565b90501561262c5750565b803b1561264e57634349776d60e01b5f526001600160a01b031660045260245ffd5b630317313760e01b5f526001600160a01b031660045260245ffd5b8054821015611428575f5260205f2001905f90565b5f828152600182016020526040902054611a2b578054906801000000000000000082101561036057826126d16126bb846001809601855584612669565b819391549060031b91821b915f19901b19161790565b90558054925f520160205260405f2055600190565b6126ef8161237b565b6126f7575050565b6125b25f92918392604051948580948193631aed5a8560e21b83527f8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f0097060048401526040602484015260448301906102a0565b6127528161237b565b61275a575050565b6125b25f92918392604051948580948193631aed5a8560e21b83527fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab0060048401526040602484015260448301906102a0565b6020815191015190602081106127c0575090565b5f199060200360031b1b1690565b805480156127f5575f1901906127e48282612669565b8154905f199060031b1b1916905555565b634e487b7160e01b5f52603160045260245ffd5b6001810191805f528260205260405f2054928315155f146128b1575f198401848111611dd85783545f19810194908511611dd8575f95858361286497612857950361286a575b5050506127ce565b905f5260205260405f2090565b55600190565b61289a6128949161288b6128816128a89588612669565b90549060031b1c90565b92839187612669565b90611f14565b85905f5260205260405f2090565b555f808061284f565b505050505f9056fea264697066735822122043faafb82e12a010fcf2ba5de82be64fc33bb6cd36eac40d9ff0f6732d7f1e8064736f6c634300081e0033",
    "sourceMap": "390:1196:1:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;:::i;:::-;619:10;;1109:26:2;1105:100;;-1:-1:-1;390:1196:1;-1:-1:-1;;;;;390:1196:1;;619:10;2201:19:5;;;2197:124;;-1:-1:-1;388:66:15;;390:1196:1;;;;;;;;:::i;:::-;388:66:15;;;;;;390:1196:1;388:66:15;;;-1:-1:-1;;;;;;;;;;;;390:1196:1;631:1;390:1196;;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;631:1;390:1196;;;;;;;;;-1:-1:-1;390:1196:1;;;;;;;;;;;-1:-1:-1;390:1196:1;;;;;;;;;;-1:-1:-1;;;;;;;;;;;390:1196:1;;5310:31:3;390:1196:1;-1:-1:-1;;;;;;;;;;;390:1196:1;-1:-1:-1;390:1196:1;;;;;;631:1;390:1196;;;;;;;;;;;;;;;;5310:31:3;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;;;;390:1196:1;;;631:1;390:1196;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;631:1;390:1196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;390:1196:1;;5310:31:3;390:1196:1;-1:-1:-1;;;;;;;;;;;390:1196:1;-1:-1:-1;390:1196:1;;;;;;631:1;390:1196;;;;;;;;;;;;;;;;5310:31:3;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;;;;390:1196:1;;;631:1;390:1196;;;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;631:1;390:1196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:31:3;390:1196:1;;-1:-1:-1;;;;;;;;;;;390:1196:1;-1:-1:-1;;;;;;;;;;;390:1196:1;;-1:-1:-1;390:1196:1;;;;;631:1;390:1196;;;;;;;;;;;;;;;5310:31:3;;;;;:::i;:::-;;;;390:1196:1;;1914:26:16;631:1:1;390:1196;1914:26:16;;245:66:20;390:1196:1;1914:26:16;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;390:1196:1;;;631:1;390:1196;;;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;631:1;390:1196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:31:3;390:1196:1;;-1:-1:-1;;;;;;;;;;;390:1196:1;-1:-1:-1;;;;;;;;;;;390:1196:1;;-1:-1:-1;390:1196:1;;;;;631:1;390:1196;;;;;;;;;;;;;;;5310:31:3;;;;;:::i;:::-;;;;390:1196:1;;3329:30:22;-1:-1:-1;390:1196:1;3329:30:22;;245:66:20;390:1196:1;3329:30:22;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;390:1196:1;;;631:1;390:1196;;;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;631:1;390:1196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1479:31:17;390:1196:1;;-1:-1:-1;;;;;;;;;;;390:1196:1;-1:-1:-1;;;;;;;;;;;390:1196:1;;-1:-1:-1;390:1196:1;;;;;631:1;390:1196;;;;;;;;;;;;;;;1479:31:17;;;;;:::i;:::-;;;;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;1479:31:17;390:1196:1;;-1:-1:-1;;;;;;;;;;;390:1196:1;;-1:-1:-1;;;;;;;;;;;390:1196:1;;631:1;390:1196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;631:1;390:1196;;;;;;;;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;631:1;390:1196;;;;;;-1:-1:-1;390:1196:1;;;;;;;;-1:-1:-1;390:1196:1;;388:66:15;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;;;;;-1:-1:-1;390:1196:1;;388:66:15;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;5310:31:3;390:1196:1;;-1:-1:-1;;;;;;;;;;;390:1196:1;;-1:-1:-1;;;;;;;;;;;390:1196:1;;631:1;390:1196;;;;;;;;;;;;;;;;;;;;;;;;;631:1;390:1196;;;;;;;;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;631:1;390:1196;;;;;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;5310:31:3;390:1196:1;;-1:-1:-1;;;;;;;;;;;390:1196:1;;-1:-1:-1;;;;;;;;;;;390:1196:1;;631:1;390:1196;;;;;;;;;;;;;;;;;;;;;;;;;631:1;390:1196;;;;;;;;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;631:1;390:1196;;;;;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;-1:-1:-1;;;;;;;;;;;390:1196:1;;-1:-1:-1;;;;;;;;;;;390:1196:1;;5310:31:3;390:1196:1;631:1;390:1196;;;;;;;;;;;;;;;;;631:1;390:1196;;;;;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;631:1;390:1196;;;;;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;-1:-1:-1;;;;;;;;;;;390:1196:1;;-1:-1:-1;;;;;;;;;;;390:1196:1;;5310:31:3;390:1196:1;631:1;390:1196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;631:1;390:1196;;;;;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;631:1;390:1196;;;;;;-1:-1:-1;390:1196:1;;;;;;;;;;;2197:124:5;619:10:1;2241:38:5;;-1:-1:-1;2241:38:5;;-1:-1:-1;;;;;;390:1196:1;619:10;390:1196;-1:-1:-1;390:1196:1;;;-1:-1:-1;2197:124:5;;1105:100:2;1158:36;;;-1:-1:-1;1158:36:2;;-1:-1:-1;1158:36:2;390:1196:1;-1:-1:-1;390:1196:1;;;;;;;-1:-1:-1;;390:1196:1;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;-1:-1:-1;;390:1196:1;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;390:1196:1;;;;:::o",
    "deployedSourceMap": "390:1196:1:-:0;;;;;;;;;-1:-1:-1;390:1196:1;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;390:1196:1;;;;;;-1:-1:-1;;;;;;390:1196:1;;;;;;;;;-1:-1:-1;;;9084:32:22;;;:84;;;;390:1196:1;9084:164:22;;;;;390:1196:1;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;;;9084:164:22;9184:64;;;;:::i;:::-;9084:164;;;:84;390:1196:1;;-1:-1:-1;;;;1260:44:10;;;:96;;;;9084:84:22;;;;;;1260:96:10;-1:-1:-1;;;5547:35:3;;;-1:-1:-1;5547:87:3;;;;1260:96:10;;;;;5547:87:3;-1:-1:-1;;;861:40:26;;-1:-1:-1;5547:87:3;;;390:1196:1;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;;;;;;;-1:-1:-1;;390:1196:1;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;390:1196:1;;;;;3805:36:23;390:1196:1;;;;3805:36:23;:::i;:::-;390:1196:1;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;390:1196:1;;;;;2648:15:23;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;:::o;:::-;;:::i;:::-;-1:-1:-1;;;;;390:1196:1;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;390:1196:1;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;:::i;:::-;;4116:28:23;390:1196:1;;4116:28:23;:::i;:::-;4160:9;-1:-1:-1;4160:9:23;390:1196:1;;4171:19:23;;;;;4243:11;4224:44;4243:11;390:1196:1;4243:11:23;;;:::i;:::-;390:1196:1;4256:11:23;;;;:::i;:::-;390:1196:1;4224:44:23;;:::i;:::-;4208:60;;;;:::i;:::-;;;;;;:::i;:::-;;390:1196:1;4160:9:23;;4171:19;390:1196:1;;;;4171:19:23;390:1196:1;;:::i;:::-;;;;;;-1:-1:-1;;390:1196:1;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;390:1196:1;;;;;;:::o;:::-;;;;;;-1:-1:-1;;390:1196:1;;;;;9323:37:23;390:1196:1;;:::i;:::-;;;9297:7:23;;;;:::i;:::-;9323:37;:::i;:::-;390:1196:1;;;;;;;;;;;;;;-1:-1:-1;;390:1196:1;;;;;;:::i;:::-;1268:20;390:1196;1255:73;;:34;;-1:-1:-1;;;;;390:1196:1;1255:34;390:1196;;-1:-1:-1;;;;;390:1196:1;;;1255:73;390:1196;;-1:-1:-1;;;1255:85:1;;1329:10;390:1196;1255:85;;390:1196;;;;;;;;;;;1255:85;;;;;;;1415:160;1255:85;1351:53;1255:85;-1:-1:-1;1255:85:1;;;390:1196;1351:53;;:::i;:::-;390:1196;;;1499:25;;390:1196;1499:25;390:1196;1499:25;390:1196;;1499:25;390:1196;;;;;;;1499:25;;390:1196;;1499:25;;;;;;:::i;:::-;390:1196;1489:36;;390:1196;;:::i;:::-;1329:10;;1415:160;;:::i;:::-;390:1196;1255:85;;;;390:1196;1255:85;390:1196;1255:85;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;390:1196::-;;;;;;-1:-1:-1;;390:1196:1;;;;453:35;390:1196;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;;;-1:-1:-1;;390:1196:1;;;;909:62:5;;:::i;:::-;1022:21:1;1062:11;;390:1196;;;;;;;;;;;;;-1:-1:-1;;;;;390:1196:1;1109:34;;;;;390:1196;;;;-1:-1:-1;;;390:1196:1;;;;;;;;;;;;-1:-1:-1;;;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;390:1196:1;;;;;;9574:7:23;;;:::i;:::-;-1:-1:-1;390:1196:1;9600:10:23;390:1196:1;;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;390:1196:1;;;;;;-1:-1:-1;;390:1196:1;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;390:1196:1;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;390:1196:1;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;390:1196:1;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;390:1196:1;;;;;;:::i;:::-;909:62:5;;:::i;:::-;2648:15:23;390:1196:1;;;;893:31;;390:1196;;;;;893:31;;;390:1196;893:31;;:::i;:::-;390:1196;883:42;;390:1196;;;:::i;:::-;;-1:-1:-1;;;;;390:1196:1;;;14890:16:23;;14886:83;;-1:-1:-1;390:1196:1;;;13424:12:23;390:1196:1;;;;;;-1:-1:-1;;;;;390:1196:1;15127:87:23;;15254:17;;15517:123;15254:17;;;15682:8;15254:17;;:::i;:::-;2648:15;390:1196:1;;15254:17:23;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;6023:23:29;;15282:16:23;;6023:23:29;:::i;:::-;;15321:26:23;:21;;;390:1196:1;;15321:12:23;390:1196:1;;;;;;;15321:21:23;390:1196:1;;-1:-1:-1;;;;;;390:1196:1;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;15321:26:23;-1:-1:-1;15363:58:23;390:1196:1;;15372:10:23;15363:58;15372:10;;15363:58;;:::i;:::-;;;;15517:123;390:1196:1;;15372:10:23;;;;;390:1196:1;15517:123:23;;;:::i;:::-;;390:1196:1;;15517:123:23;;;;;;:::i;:::-;15682:8;:::i;15127:87::-;-1:-1:-1;;;;15170:33:23;6653:35;390:1196:1;;;;-1:-1:-1;15170:33:23;14886:83;14929:29;;;-1:-1:-1;14929:29:23;390:1196:1;-1:-1:-1;14929:29:23;390:1196:1;;;;;;-1:-1:-1;;390:1196:1;;;;-1:-1:-1;;;;;390:1196:1;;:::i;:::-;;-1:-1:-1;390:1196:1;;;;;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;-1:-1:-1;;390:1196:1;;;;909:62:5;;:::i;:::-;390:1196:1;;-1:-1:-1;;;;;390:1196:1;;;2197:124:5;;390:1196:1;2197:124:5;390:1196:1;2241:38:5;;;;;-1:-1:-1;;;;;;390:1196:1;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;390:1196:1;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;390:1196:1;;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;:::i;:::-;909:62:5;;:::i;:::-;2590:9:3;2586:55;;2669:9;;;:::i;2586:55::-;2613:28;;;-1:-1:-1;2613:28:3;390:1196:1;-1:-1:-1;2613:28:3;390:1196:1;;;;;;-1:-1:-1;;390:1196:1;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;:::i;:::-;7123:21:23;;;;:::i;:::-;-1:-1:-1;;;;;390:1196:1;;;7173:10:23;7159:24;;7155:112;;-1:-1:-1;;;;;;390:1196:1;;7281:22:23;;7277:96;;7387:22;;;7383:92;;7547:8;7500:33;:19;;;390:1196:1;;7500:10:23;390:1196:1;;;;;;;7500:19:23;:33;:::i;:::-;7547:8;;390:1196:1;7547:8:23;7543:69;;390:1196:1;;7806:135:23;390:1196:1;24174:8:23;390:1196:1;7628:143:23;390:1196:1;;7628:143:23;;;;;:::i;:::-;;;;7806:135;390:1196:1;;7173:10:23;;;;390:1196:1;7806:135:23;;;:::i;:::-;24174:8;:::i;7543:69::-;-1:-1:-1;;;;7564:48:23;-1:-1:-1;;;;;390:1196:1;;;;;;;;;-1:-1:-1;15170:33:23;7383:92;7432:32;;;-1:-1:-1;7432:32:23;390:1196:1;-1:-1:-1;7432:32:23;7277:96;7326:36;;;-1:-1:-1;7326:36:23;390:1196:1;-1:-1:-1;7326:36:23;7155:112;-1:-1:-1;;;;7206:50:23;-1:-1:-1;;;;;390:1196:1;;;;;;;7173:10:23;390:1196:1;;;-1:-1:-1;15170:33:23;390:1196:1;;;;;;-1:-1:-1;;390:1196:1;;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;-1:-1:-1;;390:1196:1;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;:::i;:::-;909:62:5;;;:::i;:::-;3442:9:3;3438:55;;390:1196:1;;;;3508:36:3;3504:112;;390:1196:1;;3630:20:3;3626:92;;-1:-1:-1;3733:13:3;390:1196:1;;3748:19:3;;;;;3794:11;3807:13;3794:11;390:1196:1;3794:11:3;;;:::i;:::-;390:1196:1;3807:13:3;;;;:::i;:::-;;;;:::i;:::-;390:1196:1;3733:13:3;;3626:92;3673:34;;;-1:-1:-1;3673:34:3;390:1196:1;-1:-1:-1;3673:34:3;3504:112;3567:38;;;-1:-1:-1;3567:38:3;390:1196:1;-1:-1:-1;3567:38:3;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;390:1196:1;;;;-1:-1:-1;;;;;390:1196:1;;:::i;:::-;;-1:-1:-1;390:1196:1;;;;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;390:1196:1;;;;;;:::i;:::-;909:62:5;;:::i;:::-;757:44:1;390:1196;;-1:-1:-1;;;;;;390:1196:1;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;;;;;;-1:-1:-1;;390:1196:1;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;:::i;:::-;909:62:5;;;:::i;:::-;390:1196:1;;;;5002:34:23;;;;;;:86;;;390:1196:1;4985:178:23;;;390:1196:1;;5177:20:23;5173:86;;-1:-1:-1;5274:9:23;390:1196:1;;5285:19:23;;;;;5341:11;5367:13;5341:11;390:1196:1;5341:11:23;;;:::i;:::-;390:1196:1;5354:11:23;;;;:::i;:::-;390:1196:1;5367:13:23;;;;:::i;:::-;;;;:::i;:::-;390:1196:1;5274:9:23;;5173:86;5220:28;;;-1:-1:-1;5220:28:23;390:1196:1;-1:-1:-1;5220:28:23;4985:178;5120:32;;;-1:-1:-1;5120:32:23;390:1196:1;-1:-1:-1;5120:32:23;5002:86;390:1196:1;;;;5052:36:23;;5002:86;;;390:1196:1;;;;;;-1:-1:-1;;390:1196:1;;;;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;4709:9:23;390:1196:1;;;;;;:::i;:::-;909:62:5;;;:::i;:::-;4709:9:23;:::i;390:1196:1:-;;;;;;-1:-1:-1;;390:1196:1;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;:::i;:::-;8274:21:23;;;;:::i;:::-;-1:-1:-1;;;;;390:1196:1;;8324:10:23;8310:24;;8306:112;;-1:-1:-1;;;;;390:1196:1;;;8432:22:23;;8428:96;;8538:22;8534:92;;8752:24;;;;;;;:::i;:::-;8797:274;;390:1196:1;8797:274:23;8847:158;24174:8;390:1196:1;8847:158:23;390:1196:1;;8324:10:23;;;;390:1196:1;8847:158:23;;;:::i;8306:112::-;-1:-1:-1;;;;8357:50:23;-1:-1:-1;;;;;390:1196:1;;;;;;;;8324:10:23;390:1196:1;;;-1:-1:-1;15170:33:23;390:1196:1;;;;;;-1:-1:-1;;390:1196:1;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;:::i;:::-;1682:28:3;390:1196:1;;1682:28:3;:::i;:::-;1726:13;-1:-1:-1;1726:13:3;390:1196:1;;1741:19:3;;;;;1803:11;1794:21;1803:11;390:1196:1;1803:11:3;;;:::i;:::-;390:1196:1;1794:21:3;:::i;:::-;1778:37;;;;:::i;:::-;;;;;;:::i;:::-;;390:1196:1;1726:13:3;;1741:19;390:1196:1;;;;1741:19:3;390:1196:1;;:::i;:::-;;;;;;-1:-1:-1;;390:1196:1;;;;;;:::i;:::-;909:62:5;;:::i;:::-;-1:-1:-1;;;;;390:1196:1;1638:22:5;;1634:96;;-1:-1:-1;390:1196:1;-1:-1:-1;;;;;390:1196:1;;2201:19:5;;;2197:124;;390:1196:1;2197:124:5;2241:38;;;-1:-1:-1;2241:38:5;;-1:-1:-1;;;;;;390:1196:1;;-1:-1:-1;390:1196:1;;1634:96:5;1683:36;;;-1:-1:-1;1683:36:5;390:1196:1;-1:-1:-1;1683:36:5;390:1196:1;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;390:1196:1;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;3001:290:23:-;-1:-1:-1;390:1196:1;;;3132:12:23;390:1196:1;;;;;;-1:-1:-1;;;;;390:1196:1;;3168:24:23;;3164:93;;3267:17;3001:290;:::o;3164:93::-;3215:31;;;-1:-1:-1;3215:31:23;;390:1196:1;;-1:-1:-1;3215:31:23;390:1196:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;390:1196:1;;;;:::o;10128:349:23:-;;;;10305:39;10324:10;;10305:39;:::i;:::-;10304:40;10300:119;;-1:-1:-1;;;;;390:1196:1;;;;;;;;19587:10:23;;;19583:70;;19684:21;;;:::i;:::-;-1:-1:-1;;;;;390:1196:1;;19719:18:23;;;19715:100;;19829:16;;;19825:83;;20455:47;20115:21;;20589:8;20115:21;25198:8;20115:21;;20455:47;20115:21;;:::i;:::-;;20169:7;;;;:::i;:::-;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;6317:26:29;;20188:18:23;;6317:26:29;:::i;:::-;-1:-1:-1;;;;;;390:1196:1;;;;;;;;;;;;6023:23:29;;20232:16:23;;6023:23:29;:::i;:::-;;20271:26:23;:21;;;390:1196:1;;15321:12:23;390:1196:1;;;;;;;20271:26:23;390:1196:1;;20313:52:23;;390:1196:1;20313:52:23;390:1196:1;;10324:10:23;390:1196:1;20313:52:23;:::i;:::-;;;;390:1196:1;;10324:10:23;;;;;;;;20455:47;;;;:::i;:::-;25198:8;:::i;:::-;20589;:::i;:::-;10128:349::o;19715:100::-;-1:-1:-1;;;;19760:44:23;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;;-1:-1:-1;15170:33:23;19583:70;19620:22;;;-1:-1:-1;19620:22:23;;-1:-1:-1;19620:22:23;10300:119;10367:41;;;;-1:-1:-1;10367:41:23;;390:1196:1;10324:10:23;390:1196:1;;;-1:-1:-1;10367:41:23;1325:156:3;-1:-1:-1;390:1196:1;4584:6:3;390:1196:1;;;-1:-1:-1;390:1196:1;;;;;-1:-1:-1;390:1196:1;;;;;;:::i;:::-;;;;;4584:6:3;390:1196:1;;;4584:6:3;;;;390:1196:1;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;390:1196:1;;;;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;4584:6:3;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;390:1196:1;;;;:::o;:::-;;;:::o;5750:1081:23:-;;;5884:24;;;:::i;:::-;5923:9;-1:-1:-1;5934:15:23;;;;;;5750:1081;;;:::o;5923:9::-;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;:::i;:::-;6005:65:23;6013:4;;6005:65;;;;:::i;:::-;6089:8;;6085:636;;6735:19;390:1196:1;6735:19:23;;;;;:::i;:::-;;;;;;:::i;:::-;;390:1196:1;5923:9:23;;6085:636;390:1196:1;;;;;6191:18:23;:13;;6442:158;;;;;;;6187:520;-1:-1:-1;;;;6653:35:23;;390:1196:1;;-1:-1:-1;15170:33:23;10548:683;;;;;;390:1196:1;;;;;10822:23:23;;;;:67;;;10548:683;10822:109;;;;10548:683;10822:150;;;;10548:683;10805:236;;-1:-1:-1;11067:14:23;;;;;;10548:683;;;;;;;;:::o;11056:9::-;11108:7;11146;11108;;390:1196:1;11108:7:23;;;:::i;:::-;390:1196:1;-1:-1:-1;;;;;390:1196:1;;;11108:7:23;11117:5;;;;;:::i;:::-;11124:10;;;;:::i;:::-;390:1196:1;11136:8:23;;;;;:::i;:::-;390:1196:1;;;;;11136:8:23;11146:7;;;;;:::i;:::-;;;;:::i;:::-;390:1196:1;11056:9:23;;10805:236;11004:26;;;-1:-1:-1;11004:26:23;;-1:-1:-1;11004:26:23;10822:150;390:1196:1;;;10947:25:23;;;10822:150;;:109;390:1196:1;;;10905:26:23;;;10822:109;;:67;390:1196:1;;;10861:28:23;;;10822:67;;390:1196:1;;;;;;;;;;;;;;;;;;7875:4:23;390:1196:1;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;8452:1:23;390:1196:1;;;;;;;;;;;;:::i;5532:240:22:-;5628:9;:14;5624:90;;5731:34;;;5641:1;5731:34;;5641:1;5731:34;5624:90;5665:38;390:1196:1;;5665:38:22;;;;;390:1196:1;5665:38:22;;;390:1196:1;5665:38:22;390:1196:1;;;;5641:1:22;390:1196:1;;;;5665:38:22;5113:253;5241:1;5223:8;:19;5219:90;;5325:34;;390:1196:1;5325:34:22;:::i;5219:90::-;390:1196:1;;;5665:38:22;;;;;5265:33;;390:1196:1;5241:1:22;5265:33;;390:1196:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;390:1196:1;;;5265:33:22;;;;1786:457:10;8548:66:22;5533:21:14;390:1196:1;;;;;;;;;;;;;;876:25:26;;;390:1196:1;;;;;;;;;;;:::i;:::-;5533:21:14;:::i;:::-;8548:66:22;:::i;:::-;390:1196:1;;8655:2:22;8628:29;;;:61;;;;1786:457:10;8624:127:22;;;8778:25;8770:34;8778:25;;:::i;:::-;433:22:8;;;;8770:34:22;8762:49;-1:-1:-1;;;;;390:1196:1;;2041:29:10;2037:47;;2114:122;;;:::i;2037:47::-;2072:12;;390:1196:1;2072:12:10;:::o;8624:127:22:-;390:1196:1;;-1:-1:-1;;;8710:41:22;;390:1196:1;;;8710:41:22;;;;;;:::i;:::-;;;;8628:61;8661:28;;;;8628:61;;;390:1196:1;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;21693:213:23;;21867:30;21693:213;21867:30;:::i;:::-;390:1196:1;;;;;21857:41:23;-1:-1:-1;390:1196:1;21850:6:23;390:1196:1;;;-1:-1:-1;390:1196:1;;;;;-1:-1:-1;390:1196:1;;;;;;:::i;:::-;;;;;21850:6:23;390:1196:1;;;21850:6:23;;;;390:1196:1;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;390:1196:1;;;;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;21850:6:23;390:1196:1;;;;;;;;;;;;;;;;;13557:165:23;-1:-1:-1;390:1196:1;;;13424:12:23;390:1196:1;;;;;;-1:-1:-1;;;;;390:1196:1;13424:35:23;13630:86;;13557:165;:::o;9793:229::-;-1:-1:-1;;;;;9941:21:23;;;:::i;:::-;-1:-1:-1;;;;;390:1196:1;;;;;9931:31:23;;;:83;;;;9923:92;;9793:229;:::o;9931:83::-;8974:55:29;390:1196:1;;-1:-1:-1;390:1196:1;9978:10:23;390:1196:1;;;-1:-1:-1;390:1196:1;4360:14:29;4264:129;-1:-1:-1;390:1196:1;4360:14:29;390:1196:1;;;-1:-1:-1;390:1196:1;;4360:26:29;;4264:129;;390:1196:1;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;19417:1188:23:-;;-1:-1:-1;;;;;390:1196:1;;;;19417:1188:23;;390:1196:1;;;;19587:10:23;;;19583:70;;19684:21;;;:::i;:::-;-1:-1:-1;;;;;390:1196:1;;19719:18:23;;;19715:100;;19829:16;;;19825:83;;20589:8;20115:21;20455:47;20115:21;;20455:47;20115:21;25198:8;20115:21;;-1:-1:-1;20115:21:23;;:::i;:::-;;20169:7;;;;:::i;:::-;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;6317:26:29;;20188:18:23;;6317:26:29;:::i;:::-;-1:-1:-1;;;;;;390:1196:1;;;;;;;;;;;;6023:23:29;;20232:16:23;;6023:23:29;:::i;:::-;;20271:26:23;:21;;;390:1196:1;;15321:12:23;390:1196:1;;;;;;;20271:26:23;20313:52;390:1196:1;;20322:10:23;20313:52;20322:10;;;20313:52;;:::i;19715:100::-;-1:-1:-1;;;;19760:44:23;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;;;;;-1:-1:-1;15170:33:23;1838:156:5;808:6;390:1196:1;-1:-1:-1;;;;;390:1196:1;1908:10:5;1897:21;1893:95;;1838:156::o;1893:95::-;1941:36;;;808:6;1941:36;1908:10;1941:36;390:1196:1;;808:6:5;1941:36;390:1196:1;;;;;;;;;;;;;-1:-1:-1;;390:1196:1;;;;;;;:::o;:::-;;:::i;9470:373:22:-;;245:66:20;9675:35:22;;9671:103;;633:66:15;1115:31:17;;633:66:15;;1169:26:17;;;;;;;;1111:410;776:66:15;1216:33:17;;776:66:15;;1272:28:17;;;;;;;;1212:309;915:66:15;1321:31:17;;915:66:15;;1375:26:17;;;;;;;;1317:204;1479:31;;390:1196:1;;-1:-1:-1;390:1196:1;1432:6:17;390:1196:1;;;;;-1:-1:-1;390:1196:1;;:::i;:::-;;;1479:31:17;;;;;:::i;:::-;;;;9470:373:22:o;9671:103::-;9733:30;;;;;;;;8316:150:29;8409:50;;-1:-1:-1;;;;;390:1196:1;;8409:50:29;:::i;390:1196:1:-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;390:1196:1;;;;;;;;;-1:-1:-1;390:1196:1;;;;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21018:273:23;;;21178:30;;;;:::i;:::-;390:1196:1;;;;;21168:41:23;-1:-1:-1;390:1196:1;21161:6:23;390:1196:1;;;-1:-1:-1;390:1196:1;;;-1:-1:-1;;;;;390:1196:1;;;;;;;;;;:::i;:::-;;;;;;;;;;;;21237:47:23;390:1196:1;;21237:47:23;390:1196:1;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;21237:47:23;;;;;:::i;:::-;;;;21018:273::o;390:1196:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:1196:1;;;;;;;;21237:47:23;390:1196:1;;21161:6:23;390:1196:1;;21237:47:23;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21161:6:23;390:1196:1;;;;;;;;;;;;;;;11329:510:23;;;;390:1196:1;-1:-1:-1;390:1196:1;11553:10:23;390:1196:1;;8730:53:29;390:1196:1;-1:-1:-1;390:1196:1;;;;;;;;8730:53:29;;;:::i;:::-;11603:10:23;11599:65;;390:1196:1;;;;;;;;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;11680:152:23;;390:1196:1;;;;;;;;:::i;:::-;11680:152:23;;;11329:510::o;11599:65::-;11622:42;;;;;-1:-1:-1;11622:42:23;;390:1196:1;;;;-1:-1:-1;11622:42:23;390:1196:1;;;;;;;;;;;;;;;;;;;;;;;;:::o;6767:1031:22:-;390:1196:1;;;6995:7:22;;;6966:37;8548:66;5533:21:14;390:1196:1;;;;;;;;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;;;;:::i;8548:66:22:-;390:1196:1;;8655:2:22;8628:29;;;:61;;;;6767:1031;8624:127;;;8778:25;8770:34;8778:25;;:::i;8770:34::-;8762:49;-1:-1:-1;;;;;390:1196:1;;7063:23:22;7059:92;;390:1196:1;;6995:7:22;390:1196:1;;7246:49:22;;390:1196:1;;;;7246:49:22;;;;;;7222:9;;7273:10;;7246:49;;;:::i;:::-;7200:105;7222:9;;7200:105;;;;;:::i;:::-;7316:476;;;;7343:13;:::o;7316:476::-;7246:49;7648:134;;;;;7059:92;7107:44;;;6995:7;7107:44;;390:1196:1;;6995:7:22;7107:44;8624:127;390:1196:1;;-1:-1:-1;;;8710:41:22;;390:1196:1;8710:41:22;;;390:1196:1;;;;;;;;;;;:::i;8628:61:22:-;8661:28;;;;8628:61;;;433:22:8;;390:1196:1;;;;;433:22:8;390:1196:1;;;433:22:8;;;;;;;;;;:::o;:::-;-1:-1:-1;;433:22:8;;;;;;;390:1196:1;;;433:22:8;;;-1:-1:-1;433:22:8:o;4397:632:27:-;-1:-1:-1;4568:56:27;4397:632;390:1196:1;;4568:56:27;;;876:25:26;;;;4568:56:27;;390:1196:1;;;4568:56:27;;;390:1196:1;4568:56:27;;;;;;;:::i;:::-;4745:212;;;;-1:-1:-1;4745:212:27;;4974:29;;;4397:632;4974:48;;;;4967:55;4397:632;:::o;4974:48::-;5007:15;;;;4397:632;:::o;4974:29::-;4568:56;-1:-1:-1;4985:18:27;;-1:-1:-1;4974:29:27;;;4397:632;-1:-1:-1;4397:632:27;4568:56;4397:632;390:1196:1;;4568:56:27;;;876:25:26;;;;4568:56:27;;390:1196:1;;;;4568:56:27;;;390:1196:1;4568:56:27;;;;;;;:::i;12120:1030:23:-;390:1196:1;-1:-1:-1;390:1196:1;12697:10:23;390:1196:1;;;-1:-1:-1;390:1196:1;;;;12847:9:23;-1:-1:-1;390:1196:1;;12842:302:23;12858:22;;;;;;12120:1030;;;;;;:::o;12847:9::-;390:1196:1;;;;;-1:-1:-1;390:1196:1;;;;;;;;;;-1:-1:-1;;;;;390:1196:1;;;;;:::i;:::-;-1:-1:-1;390:1196:1;;;-1:-1:-1;390:1196:1;11553:10:23;390:1196:1;;8730:53:29;390:1196:1;-1:-1:-1;390:1196:1;;;;;;;;8730:53:29;;;:::i;:::-;11603:10:23;11599:65;;390:1196:1;;;;;11680:152:23;390:1196:1;;-1:-1:-1;390:1196:1;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11680:152:23;;;390:1196:1;12847:9:23;;11599:65;11622:42;;;;;-1:-1:-1;11622:42:23;;390:1196:1;;;;-1:-1:-1;11622:42:23;901:66:20;;;;;;;;;;;-1:-1:-1;;;;;901:66:20;;;;;;;;;;;;;;;;;;;:::i;:::-;390:1196:1;;;;;;;:::i;:::-;901:66:20;;;;;;;;;;;;-1:-1:-1;901:66:20;;;;;;;;390:1196:1;;;;;901:66:20;:::o;:::-;;;;;;390:1196:1;;901:66:20;;;;;;;;:::i;26113:615:23:-;26264:115;;;:::i;:::-;;;;390:1196:1;;-1:-1:-1;;;26404:67:23;;390:1196:1;26404:67:23;;390:1196:1;;;;26404:67:23;;390:1196:1;;26404:67:23;;;;;;:::i;:::-;;;-1:-1:-1;;;;;390:1196:1;26404:67:23;;;;;;;;26247:475;26113:615::o;26404:67::-;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;26113:615::o;26247:475::-;;;26113:615::o;:::-;;;26264:115;;;:::i;:::-;;;;390:1196:1;26404:67:23;;390:1196:1;;;;;;;;;;;;;;26404:67:23;;;;;;:::i;26247:475::-;26492:6;;;26488:234;;26247:475;26113:615::o;26488:234::-;26518:14;;:19;:14;;-1:-1:-1;;;26536:1:23;26564:55;-1:-1:-1;;;;;390:1196:1;26665:32:23;390:1196:1;;-1:-1:-1;15170:33:23;26514:198;-1:-1:-1;;;26536:1:23;26665:32;-1:-1:-1;;;;;390:1196:1;26665:32:23;390:1196:1;;-1:-1:-1;15170:33:23;390:1196:1;;;;;;;;-1:-1:-1;390:1196:1;;-1:-1:-1;390:1196:1;;;-1:-1:-1;390:1196:1;:::o;2241:406:29:-;-1:-1:-1;390:1196:1;;;4360:14:29;;;390:1196:1;;;;;;2325:21:29;;390:1196:1;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2520:14:29;390:1196:1;;;;;;;2576:11:29;:::o;1432:361:13:-;1594:100;;;:::i;:::-;1577:210;;1432:361;;:::o;1577:210::-;901:66:20;1719:57:13;390:1196:1;;;;;;;;;;;;;;;1719:57:13;;1064:66:20;1719:57:13;;;390:1196:1;;901:66:20;;;;;;;;;:::i;1432:361:13:-;1594:100;;;:::i;:::-;1577:210;;1432:361;;:::o;1577:210::-;901:66:20;1719:57:13;390:1196:1;;;;;;;;;;;;;;;1719:57:13;;735:66:20;1719:57:13;;;390:1196:1;;901:66:20;;;;;;;;;:::i;390:1196:1:-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;390:1196:1;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;2815:1368:29;3010:14;;;390:1196:1;;;;;;;;;;;3046:13:29;;;;3042:1135;3046:13;;;-1:-1:-1;;390:1196:1;;;;;;;;;-1:-1:-1;;390:1196:1;;;;;;;;;3521:23:29;;;4076:21;3521:23;3973:15;3521:23;;3517:378;;3042:1135;3973:15;;;;:::i;:::-;390:1196:1;;;;;;;;;;4076:21:29;390:1196:1;3010:14:29;4112:11;:::o;3517:378::-;3705:35;:23;3584:22;390:1196:1;3584:22:29;3844:25;3584:22;;;:::i;:::-;390:1196:1;;;;;;;;;3705:23:29;;;;;:::i;:::-;:35;;:::i;:::-;3844:25;390:1196:1;;;;;;;;;;3844:25:29;390:1196:1;3517:378:29;;;;;3042:1135;4154:12;;;;390:1196:1;4154:12:29;:::o",
    "sourcePath": "c:/Users/GabCh/Documents/projects/portal-contracts/contracts/AvatarWearable.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.30+commit.73712a01"
    },
    "ast": {
        "absolutePath": "c:/Users/GabCh/Documents/projects/portal-contracts/contracts/AvatarWearable.sol",
        "exportedSymbols": {
            "AvatarAccess": [
                157
            ],
            "AvatarWearable": [
                283
            ],
            "Context": [
                4157
            ],
            "ERC725YCore": [
                554
            ],
            "IERC165": [
                4388
            ],
            "InvalidExtensionAddress": [
                817
            ],
            "InvalidFunctionSelector": [
                812
            ],
            "LSP17Extendable": [
                951
            ],
            "LSP2Utils": [
                1814
            ],
            "LSP4DigitalAssetMetadata": [
                1941
            ],
            "LSP4DigitalAssetMetadataCore": [
                2003
            ],
            "LSP8IdentifiableDigitalAsset": [
                2641
            ],
            "LSP8IdentifiableDigitalAssetCore": [
                3979
            ],
            "LSP8TokenContractCannotHoldValue": [
                2358
            ],
            "LSP8TokenIdFormatNotEditable": [
                2361
            ],
            "NoExtensionFoundForFunctionSelector": [
                807
            ],
            "Ownable": [
                4127
            ],
            "_INTERFACEID_LSP8": [
                2240
            ],
            "_LSP17_EXTENSION_PREFIX": [
                800
            ],
            "_LSP8_TOKENID_FORMAT_KEY": [
                2243
            ]
        },
        "id": 284,
        "license": "Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 159,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                ],
                "nodeType": "PragmaDirective",
                "src": "40:24:1"
            },
            {
                "absolutePath": "c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol",
                "file": "c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol",
                "id": 160,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 284,
                "sourceUnit": 2642,
                "src": "66:172:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "file": "c:/Users/GabCh/Documents/projects/portal-contracts/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "id": 161,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 284,
                "sourceUnit": 4128,
                "src": "240:116:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/GabCh/Documents/projects/portal-contracts/contracts/AvatarAccess.sol",
                "file": "./AvatarAccess.sol",
                "id": 162,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 284,
                "sourceUnit": 158,
                "src": "358:28:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 163,
                            "name": "LSP8IdentifiableDigitalAsset",
                            "nameLocations": [
                                "417:28:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2641,
                            "src": "417:28:1"
                        },
                        "id": 164,
                        "nodeType": "InheritanceSpecifier",
                        "src": "417:28:1"
                    }
                ],
                "canonicalName": "AvatarWearable",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 283,
                "internalFunctionIDs": {
                    "4180": 1
                },
                "linearizedBaseContracts": [
                    283,
                    2641,
                    951,
                    3979,
                    2235,
                    1941,
                    2003,
                    319,
                    554,
                    789,
                    4181,
                    4388,
                    686
                ],
                "name": "AvatarWearable",
                "nameLocation": "399:14:1",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "35615ec8",
                        "id": 166,
                        "mutability": "mutable",
                        "name": "avatarAccessContract",
                        "nameLocation": "468:20:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "453:35:1",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 165,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "453:7:1",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 181,
                            "nodeType": "Block",
                            "src": "637:2:1",
                            "statements": []
                        },
                        "id": 182,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 173,
                                        "name": "name",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 168,
                                        "src": "605:4:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 174,
                                        "name": "symbol",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 170,
                                        "src": "611:6:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "expression": {
                                            "id": 175,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "619:3:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 176,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "623:6:1",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "619:10:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "hexValue": "31",
                                        "id": 177,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "631:1:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                    },
                                    {
                                        "hexValue": "30",
                                        "id": 178,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "634:1:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                    }
                                ],
                                "id": 179,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 172,
                                    "name": "LSP8IdentifiableDigitalAsset",
                                    "nameLocations": [
                                        "576:28:1"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 2641,
                                    "src": "576:28:1"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "576:60:1"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 171,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 168,
                                    "mutability": "mutable",
                                    "name": "name",
                                    "nameLocation": "533:4:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 182,
                                    "src": "519:18:1",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 167,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "519:6:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 170,
                                    "mutability": "mutable",
                                    "name": "symbol",
                                    "nameLocation": "562:6:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 182,
                                    "src": "548:20:1",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 169,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "548:6:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "508:67:1"
                        },
                        "returnParameters": {
                            "id": 180,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "637:0:1"
                        },
                        "scope": 283,
                        "src": "497:142:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 193,
                            "nodeType": "Block",
                            "src": "746:63:1",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 191,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 189,
                                            "name": "avatarAccessContract",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 166,
                                            "src": "757:20:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 190,
                                            "name": "_avatarAccessContract",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 184,
                                            "src": "780:21:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "757:44:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 192,
                                    "nodeType": "ExpressionStatement",
                                    "src": "757:44:1"
                                }
                            ]
                        },
                        "functionSelector": "b6fea40f",
                        "id": 194,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 187,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 186,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "736:9:1"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 608,
                                    "src": "736:9:1"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "736:9:1"
                            }
                        ],
                        "name": "setAvatarAccessContract",
                        "nameLocation": "656:23:1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 185,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 184,
                                    "mutability": "mutable",
                                    "name": "_avatarAccessContract",
                                    "nameLocation": "698:21:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 194,
                                    "src": "690:29:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 183,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "690:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "679:47:1"
                        },
                        "returnParameters": {
                            "id": 188,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "746:0:1"
                        },
                        "scope": 283,
                        "src": "647:162:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 214,
                            "nodeType": "Block",
                            "src": "862:84:1",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 202,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 196,
                                                "src": "879:2:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "arguments": [],
                                                                "expression": {
                                                                    "argumentTypes": [],
                                                                    "id": 206,
                                                                    "name": "totalSupply",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2722,
                                                                    "src": "910:11:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                        "typeString": "function () view returns (uint256)"
                                                                    }
                                                                },
                                                                "id": 207,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "910:13:1",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 204,
                                                                "name": "abi",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967295,
                                                                "src": "893:3:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_abi",
                                                                    "typeString": "abi"
                                                                }
                                                            },
                                                            "id": 205,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberLocation": "897:12:1",
                                                            "memberName": "encodePacked",
                                                            "nodeType": "MemberAccess",
                                                            "src": "893:16:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                "typeString": "function () pure returns (bytes memory)"
                                                            }
                                                        },
                                                        "id": 208,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "893:31:1",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    ],
                                                    "id": 203,
                                                    "name": "keccak256",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967288,
                                                    "src": "883:9:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                                    }
                                                },
                                                "id": 209,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "883:42:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "hexValue": "74727565",
                                                "id": 210,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "927:4:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "true"
                                            },
                                            {
                                                "hexValue": "3078",
                                                "id": 211,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "933:4:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                                    "typeString": "literal_string \"0x\""
                                                },
                                                "value": "0x"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                                    "typeString": "literal_string \"0x\""
                                                }
                                            ],
                                            "id": 201,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3597,
                                            "src": "873:5:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                                                "typeString": "function (address,bytes32,bool,bytes memory)"
                                            }
                                        },
                                        "id": 212,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "873:65:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 213,
                                    "nodeType": "ExpressionStatement",
                                    "src": "873:65:1"
                                }
                            ]
                        },
                        "functionSelector": "6a627842",
                        "id": 215,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 199,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 198,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "852:9:1"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 608,
                                    "src": "852:9:1"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "852:9:1"
                            }
                        ],
                        "name": "mint",
                        "nameLocation": "826:4:1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 197,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 196,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "839:2:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 215,
                                    "src": "831:10:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 195,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "831:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "830:12:1"
                        },
                        "returnParameters": {
                            "id": 200,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "862:0:1"
                        },
                        "scope": 283,
                        "src": "817:129:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 244,
                            "nodeType": "Block",
                            "src": "993:158:1",
                            "statements": [
                                {
                                    "assignments": [
                                        221
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 221,
                                            "mutability": "mutable",
                                            "name": "balance",
                                            "nameLocation": "1012:7:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 244,
                                            "src": "1004:15:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 220,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1004:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 227,
                                    "initialValue": {
                                        "expression": {
                                            "arguments": [
                                                {
                                                    "id": 224,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967268,
                                                    "src": "1030:4:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_AvatarWearable_$283",
                                                        "typeString": "contract AvatarWearable"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_AvatarWearable_$283",
                                                        "typeString": "contract AvatarWearable"
                                                    }
                                                ],
                                                "id": 223,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "1022:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 222,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "1022:7:1",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 225,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1022:13:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "id": 226,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "1036:7:1",
                                        "memberName": "balance",
                                        "nodeType": "MemberAccess",
                                        "src": "1022:21:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1004:39:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 231,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 229,
                                                    "name": "balance",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 221,
                                                    "src": "1062:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 230,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1072:1:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "1062:11:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4e6f2066756e647320746f207769746864726177",
                                                "id": 232,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1075:22:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
                                                    "typeString": "literal_string \"No funds to withdraw\""
                                                },
                                                "value": "No funds to withdraw"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
                                                    "typeString": "literal_string \"No funds to withdraw\""
                                                }
                                            ],
                                            "id": 228,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1054:7:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 233,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1054:44:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 234,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1054:44:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 241,
                                                "name": "balance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 221,
                                                "src": "1135:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 237,
                                                            "name": "owner",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 600,
                                                            "src": "1117:5:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                "typeString": "function () view returns (address)"
                                                            }
                                                        },
                                                        "id": 238,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1117:7:1",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 236,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1109:8:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 235,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1109:8:1",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 239,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1109:16:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 240,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1126:8:1",
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "src": "1109:25:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 242,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1109:34:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 243,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1109:34:1"
                                }
                            ]
                        },
                        "functionSelector": "3ccfd60b",
                        "id": 245,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 218,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 217,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "983:9:1"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 608,
                                    "src": "983:9:1"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "983:9:1"
                            }
                        ],
                        "name": "withdraw",
                        "nameLocation": "963:8:1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 216,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "971:2:1"
                        },
                        "returnParameters": {
                            "id": 219,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "993:0:1"
                        },
                        "scope": 283,
                        "src": "954:197:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 281,
                            "nodeType": "Block",
                            "src": "1226:357:1",
                            "statements": [
                                {
                                    "assignments": [
                                        253
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 253,
                                            "mutability": "mutable",
                                            "name": "isApproved",
                                            "nameLocation": "1242:10:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 281,
                                            "src": "1237:15:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 252,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1237:4:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 261,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 258,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "1329:3:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 259,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1333:6:1",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "1329:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 255,
                                                        "name": "avatarAccessContract",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 166,
                                                        "src": "1268:20:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 254,
                                                    "name": "AvatarAccess",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 157,
                                                    "src": "1255:12:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_AvatarAccess_$157_$",
                                                        "typeString": "type(contract AvatarAccess)"
                                                    }
                                                },
                                                "id": 256,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1255:34:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_AvatarAccess_$157",
                                                    "typeString": "contract AvatarAccess"
                                                }
                                            },
                                            "id": 257,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1304:24:1",
                                            "memberName": "isAvatarContractApproved",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 147,
                                            "src": "1255:73:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                                "typeString": "function (address) view external returns (bool)"
                                            }
                                        },
                                        "id": 260,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1255:85:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1237:103:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 263,
                                                "name": "isApproved",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 253,
                                                "src": "1359:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "5765617261626c6520636f6e7472616374206e6f7420617070726f766564",
                                                "id": 264,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1371:32:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_d73e505345c2423e5e49a04b93cc9490e86fbf50a8254003f39372724225e51f",
                                                    "typeString": "literal_string \"Wearable contract not approved\""
                                                },
                                                "value": "Wearable contract not approved"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_d73e505345c2423e5e49a04b93cc9490e86fbf50a8254003f39372724225e51f",
                                                    "typeString": "literal_string \"Wearable contract not approved\""
                                                }
                                            ],
                                            "id": 262,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1351:7:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 265,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1351:53:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 266,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1351:53:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 268,
                                                "name": "tokenOwner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 249,
                                                "src": "1439:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 269,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "1464:3:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 270,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1468:6:1",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "1464:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 274,
                                                                "name": "tokenId",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 247,
                                                                "src": "1516:7:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 272,
                                                                "name": "abi",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967295,
                                                                "src": "1499:3:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_abi",
                                                                    "typeString": "abi"
                                                                }
                                                            },
                                                            "id": 273,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberLocation": "1503:12:1",
                                                            "memberName": "encodePacked",
                                                            "nodeType": "MemberAccess",
                                                            "src": "1499:16:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                "typeString": "function () pure returns (bytes memory)"
                                                            }
                                                        },
                                                        "id": 275,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1499:25:1",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    ],
                                                    "id": 271,
                                                    "name": "keccak256",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967288,
                                                    "src": "1489:9:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                                    }
                                                },
                                                "id": 276,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1489:36:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "hexValue": "66616c7365",
                                                "id": 277,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1540:5:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "false"
                                            },
                                            {
                                                "hexValue": "3078",
                                                "id": 278,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1560:4:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                                    "typeString": "literal_string \"0x\""
                                                },
                                                "value": "0x"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                                    "typeString": "literal_string \"0x\""
                                                }
                                            ],
                                            "id": 267,
                                            "name": "_transfer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3820,
                                            "src": "1415:9:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                                                "typeString": "function (address,address,bytes32,bool,bytes memory)"
                                            }
                                        },
                                        "id": 279,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1415:160:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 280,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1415:160:1"
                                }
                            ]
                        },
                        "functionSelector": "354bedd9",
                        "id": 282,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "equipWearable",
                        "nameLocation": "1168:13:1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 250,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 247,
                                    "mutability": "mutable",
                                    "name": "tokenId",
                                    "nameLocation": "1190:7:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 282,
                                    "src": "1182:15:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 246,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1182:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 249,
                                    "mutability": "mutable",
                                    "name": "tokenOwner",
                                    "nameLocation": "1207:10:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 282,
                                    "src": "1199:18:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 248,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1199:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1181:37:1"
                        },
                        "returnParameters": {
                            "id": 251,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1226:0:1"
                        },
                        "scope": 283,
                        "src": "1159:424:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 284,
                "src": "390:1196:1",
                "usedErrors": [
                    691,
                    696,
                    732,
                    735,
                    738,
                    807,
                    812,
                    817,
                    2008,
                    2011,
                    2014,
                    2295,
                    2304,
                    2311,
                    2318,
                    2321,
                    2324,
                    2327,
                    2334,
                    2339,
                    2342,
                    2347,
                    2352,
                    2355,
                    2358,
                    2361,
                    2364,
                    2367,
                    2372
                ],
                "usedEvents": [
                    591,
                    752,
                    2040,
                    2051,
                    2064,
                    2073
                ]
            }
        ],
        "src": "40:1548:1"
    },
    "functionHashes": {
        "authorizeOperator(address,bytes32,bytes)": "86a10ddd",
        "avatarAccessContract()": "35615ec8",
        "balanceOf(address)": "70a08231",
        "batchCalls(bytes[])": "6963d438",
        "equipWearable(uint256,address)": "354bedd9",
        "getData(bytes32)": "54f6127f",
        "getDataBatch(bytes32[])": "dedff9c6",
        "getDataBatchForTokenIds(bytes32[],bytes32[])": "1d26fce6",
        "getDataForTokenId(bytes32,bytes32)": "16e023b3",
        "getOperatorsOf(bytes32)": "49a6078d",
        "isOperatorFor(address,bytes32)": "2a3654a4",
        "mint(address)": "6a627842",
        "owner()": "8da5cb5b",
        "renounceOwnership()": "715018a6",
        "revokeOperator(address,bytes32,bool,bytes)": "db8c9663",
        "setAvatarAccessContract(address)": "b6fea40f",
        "setData(bytes32,bytes)": "7f23690c",
        "setDataBatch(bytes32[],bytes[])": "97902421",
        "setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])": "be9f0e6f",
        "setDataForTokenId(bytes32,bytes32,bytes)": "d6c1407c",
        "supportsInterface(bytes4)": "01ffc9a7",
        "tokenIdsOf(address)": "a3b261f2",
        "tokenOwnerOf(bytes32)": "217b2270",
        "totalSupply()": "18160ddd",
        "transfer(address,address,bytes32,bool,bytes)": "511b6952",
        "transferBatch(address[],address[],bytes32[],bool[],bytes[])": "7e87632c",
        "transferOwnership(address)": "f2fde38b",
        "withdraw()": "3ccfd60b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "2095800",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "": "infinite",
            "authorizeOperator(address,bytes32,bytes)": "infinite",
            "avatarAccessContract()": "2438",
            "balanceOf(address)": "2718",
            "batchCalls(bytes[])": "infinite",
            "equipWearable(uint256,address)": "infinite",
            "getData(bytes32)": "infinite",
            "getDataBatch(bytes32[])": "infinite",
            "getDataBatchForTokenIds(bytes32[],bytes32[])": "infinite",
            "getDataForTokenId(bytes32,bytes32)": "infinite",
            "getOperatorsOf(bytes32)": "infinite",
            "isOperatorFor(address,bytes32)": "7182",
            "mint(address)": "infinite",
            "owner()": "2701",
            "renounceOwnership()": "28402",
            "revokeOperator(address,bytes32,bool,bytes)": "infinite",
            "setAvatarAccessContract(address)": "27122",
            "setData(bytes32,bytes)": "infinite",
            "setDataBatch(bytes32[],bytes[])": "infinite",
            "setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])": "infinite",
            "setDataForTokenId(bytes32,bytes32,bytes)": "infinite",
            "supportsInterface(bytes4)": "infinite",
            "tokenIdsOf(address)": "infinite",
            "tokenOwnerOf(bytes32)": "2510",
            "totalSupply()": "2304",
            "transfer(address,address,bytes32,bool,bytes)": "infinite",
            "transferBatch(address[],address[],bytes32[],bool[],bytes[])": "infinite",
            "transferOwnership(address)": "28782",
            "withdraw()": "infinite"
        }
    }
}